{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport './Calendar.css';\nimport journalContext from \"../journal-context\";\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\n\nfunction ReactCalendar() {\n  _s();\n\n  const context = useContext(journalContext);\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n    context.updateCurrentDate(date);\n    context.setClicked(true);\n  };\n\n  let posts = context.posts;\n\n  let allDates = () => {\n    let array = [];\n\n    if (!posts) {\n      return;\n    } else {\n      posts.map((posts, i) => {\n        let formattedDate = moment(context.posts[i].modified).format('MM/DD/YYYY');\n        array.push(formattedDate);\n        return;\n      });\n      return array;\n    }\n  };\n\n  const customTile = ({\n    activeStartDate,\n    date,\n    view,\n    i\n  }) => view === 'month' && allDates().includes(moment(date.getDay()).format('MM/DD/YYYY')) == true ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"https://banner2.cleanpng.com/20180613/lcq/kisspng-computer-icons-clip-art-mindful-5b20bafe101558.4443616115288716780659.jpg\",\n    width: \"15\",\n    height: \"10\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 97\n  }, this) : null;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"sun-ray\",\n      src: \"https://media3.giphy.com/media/JpMnkVV9s3ILRYYHnq/giphy.gif\",\n      height: \"70\",\n      width: \"130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"calendar-table\",\n      onChange: onChange,\n      value: date,\n      maxDate: new Date(),\n      tileContent: customTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactCalendar, \"mX9U7YyZBwDw2JFhDHLpwUeyifg=\");\n\n_c = ReactCalendar;\nexport default ReactCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactCalendar\");","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js"],"names":["React","useContext","useState","Calendar","journalContext","moment","ReactCalendar","context","date","setDate","Date","onChange","updateCurrentDate","setClicked","posts","allDates","array","map","i","formattedDate","modified","format","push","customTile","activeStartDate","view","includes","getDay"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAIC,SAASC,aAAT,GAAwB;AAAA;;AAEvB,QAAMC,OAAO,GAAGN,UAAU,CAACG,cAAD,CAA1B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAAhC;;AAEA,QAAMC,QAAQ,GAAGH,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACK,iBAAR,CAA0BJ,IAA1B;AACAD,IAAAA,OAAO,CAACM,UAAR,CAAmB,IAAnB;AAED,GALD;;AAOA,MAAIC,KAAK,GAAGP,OAAO,CAACO,KAApB;;AAEA,MAAIC,QAAQ,GAAG,MAAM;AAEjB,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAG,CAACF,KAAJ,EAAU;AACN;AACH,KAFD,MAGK;AAEHA,MAAAA,KAAK,CAACG,GAAN,CAAW,CAACH,KAAD,EAASI,CAAT,KAAe;AACtB,YAAIC,aAAa,GAAGd,MAAM,CAACE,OAAO,CAACO,KAAR,CAAcI,CAAd,EAAiBE,QAAlB,CAAN,CAAkCC,MAAlC,CAAyC,YAAzC,CAApB;AACCL,QAAAA,KAAK,CAACM,IAAN,CAAWH,aAAX;AACA;AAEF,OALH;AAMC,aAAOH,KAAP;AACJ;AACF,GAjBD;;AAqBA,QAAMO,UAAU,GAAG,CAAC;AAAEC,IAAAA,eAAF;AAAmBhB,IAAAA,IAAnB;AAAyBiB,IAAAA,IAAzB;AAA8BP,IAAAA;AAA9B,GAAD,KACnBO,IAAI,KAAK,OAAT,IAAoBV,QAAQ,GAAGW,QAAX,CAAoBrB,MAAM,CAACG,IAAI,CAACmB,MAAL,EAAD,CAAN,CAAsBN,MAAtB,CAA6B,YAA7B,CAApB,KAAmE,IAAvF,gBAA8F;AAAK,IAAA,GAAG,EAAC,6HAAT;AAAuI,IAAA,KAAK,EAAC,IAA7I;AAAkJ,IAAA,MAAM,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA,UAA9F,GAAgQ,IADhQ;;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAA2B,MAAA,GAAG,EAAC,6DAA/B;AAA6F,MAAA,MAAM,EAAC,IAApG;AAAyG,MAAA,KAAK,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAW,MAAA,SAAS,EAAG,gBAAvB;AAAwC,MAAA,QAAQ,EAAIV,QAApD;AAA8D,MAAA,KAAK,EAAIH,IAAvE;AAA6E,MAAA,OAAO,EAAG,IAAIE,IAAJ,EAAvF;AAAmG,MAAA,WAAW,EAAEa;AAAhH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOA;;GA7CQjB,a;;KAAAA,a;AAmDV,eAAeA,aAAf","sourcesContent":["  \nimport React, { useContext, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport './Calendar.css';\nimport journalContext from \"../journal-context\";\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\n\n\n   \n function ReactCalendar(){\n\n  const context = useContext(journalContext)\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n    context.updateCurrentDate(date)\n    context.setClicked(true)\n\n  }\n\n  let posts = context.posts \n\n  let allDates = () => {\n\n      let array = [];\n      \n      if(!posts){\n          return;\n      }       \n      else {\n\n        posts.map( (posts , i) => {\n            let formattedDate = moment(context.posts[i].modified).format('MM/DD/YYYY')\n             array.push(formattedDate)\n             return;\n\n          })\n         return array;  \n    } \n  }       \n\n\n\n  const customTile = ({ activeStartDate, date, view,i }) => \n  view === 'month' && allDates().includes(moment(date.getDay()).format('MM/DD/YYYY')) == true ? <img src=\"https://banner2.cleanpng.com/20180613/lcq/kisspng-computer-icons-clip-art-mindful-5b20bafe101558.4443616115288716780659.jpg\" width=\"15\" height=\"10\"/> : null\n\n  return (\n    <div>\n      <img className = 'sun-ray' src=\"https://media3.giphy.com/media/JpMnkVV9s3ILRYYHnq/giphy.gif\" height='70' width='130'/>\n      <Calendar  className = \"calendar-table\" onChange = {onChange} value = {date} maxDate= {new Date()} tileContent={customTile}/>     \n    </div>\n  )\n   \n }\n\n\n\n\n\nexport default ReactCalendar;"]},"metadata":{},"sourceType":"module"}