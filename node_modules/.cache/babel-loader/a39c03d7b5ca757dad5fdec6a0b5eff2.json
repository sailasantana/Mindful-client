{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js\";\nimport React from 'react';\nimport getNumberofEntries from '../helper-funcs';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nexport default class Stats extends React.Component {\n  render() {\n    let posts = this.context.posts;\n\n    let maxDate = () => {\n      let array = [];\n\n      if (!posts) {\n        return;\n      } else {\n        posts.map((posts, i) => {\n          let formattedDate = moment(this.context.posts[i].modified).format('MM/DD/YYYY');\n          return array.push(formattedDate);\n        });\n        let max = new Date(Math.max(...array.map(date => new Date(date))));\n        let formattedMax = moment(max).format('MM/DD/YYYY');\n        return formattedMax;\n      }\n    };\n\n    const statsToDislay = maxDate();\n    console.log(statsToDislay);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Add today's entry\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-entry\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), this.context.posts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nStats.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js"],"names":["React","getNumberofEntries","journalContext","moment","Link","Stats","Component","render","posts","context","maxDate","array","map","i","formattedDate","modified","format","push","max","Date","Math","date","formattedMax","statsToDislay","console","log","contextType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAK/CC,EAAAA,MAAM,GAAE;AAER,QAAIC,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAAzB;;AAEA,QAAIE,OAAO,GAAG,MAAM;AAEhB,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAG,CAACH,KAAJ,EAAU;AACN;AACH,OAFD,MAGK;AAEHA,QAAAA,KAAK,CAACI,GAAN,CAAW,CAACJ,KAAD,EAASK,CAAT,KAAe;AACtB,cAAIC,aAAa,GAAGX,MAAM,CAAC,KAAKM,OAAL,CAAaD,KAAb,CAAmBK,CAAnB,EAAsBE,QAAvB,CAAN,CAAuCC,MAAvC,CAA8C,YAA9C,CAApB;AACA,iBAAOL,KAAK,CAACM,IAAN,CAAWH,aAAX,CAAP;AAED,SAJH;AAME,YAAII,GAAG,GAAG,IAAIC,IAAJ,CAASC,IAAI,CAACF,GAAL,CAAS,GAAGP,KAAK,CAACC,GAAN,CAAUS,IAAI,IAAI,IAAIF,IAAJ,CAASE,IAAT,CAAlB,CAAZ,CAAT,CAAV;AACA,YAAIC,YAAY,GAAGnB,MAAM,CAACe,GAAD,CAAN,CAAYF,MAAZ,CAAmB,YAAnB,CAAnB;AACA,eAAOM,YAAP;AAGC;AACJ,KArBL;;AAuBA,UAAMC,aAAa,GAAIb,OAAO,EAA9B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAII,wBACI;AAAA,8BACI;AAAA,qDAAsB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAX;AAAA,iCAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKd,OAAL,CAAaD,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7C8C;AAA9BH,K,CAEVqB,W,GAAcxB,c","sourcesContent":["import React from 'react';\nimport getNumberofEntries from '../helper-funcs';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Stats extends React.Component {\n\n    static contextType = journalContext;\n\n\n    render(){\n\n    let posts = this.context.posts \n\n    let maxDate = () => {\n\n        let array = [];\n        \n        if(!posts){\n            return;\n        }       \n        else {\n\n          posts.map( (posts , i) => {\n              let formattedDate = moment(this.context.posts[i].modified).format('MM/DD/YYYY')\n              return array.push(formattedDate)\n  \n            })\n            \n            let max = new Date(Math.max(...array.map(date => new Date(date))))\n            let formattedMax = moment(max).format('MM/DD/YYYY')\n            return formattedMax;\n    \n      \n            }\n        } \n\n    const statsToDislay =  maxDate() \n    console.log(statsToDislay)   \n\n  \n\n        return(\n            <div>\n                <div>Add today's entry<Link to = '/add-entry'><button>+</button></Link></div>\n                {this.context.posts}\n              \n            </div>\n             \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}