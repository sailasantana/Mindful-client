{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js\";\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport SignUp from './SignUp';\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJwtLoginAuth = e => {\n      const {\n        return_user,\n        return_pass\n      } = e.target;\n      this.setState({\n        error: null\n      });\n      AuthApiService.postLogin({\n        user_name: return_user.value,\n        password: return_pass.value\n      }).then(res => {\n        return_user.value = '';\n        return_pass.value = '';\n        TokenService.saveAuthToken(res.authToken);\n        this.props.onvalidLogin();\n\n        if (res.ok) {\n          this.context.setUserName(return_user.value);\n        }\n      }).then(() => {\n        window.location = '/dashboard';\n      }).catch(res => {\n        this.setState({\n          error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n        });\n      });\n    };\n\n    this.state = {\n      error: null\n    };\n  } //handle login auth and validation upon form submission\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login or Sign Up to Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: true,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"return-user\",\n          name: \"return_user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"return-pass\",\n          name: \"return_pass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./sign-up\",\n          children: \"Sign Up here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLoginPage.defaultProps = {\n  onvalidLogin: () => {}\n};\nLoginPage.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js"],"names":["React","Route","Link","AuthApiService","TokenService","journalContext","SignUp","LoginPage","Component","constructor","props","handleJwtLoginAuth","e","return_user","return_pass","target","setState","error","postLogin","user_name","value","password","then","res","saveAuthToken","authToken","onvalidLogin","ok","context","setUserName","window","location","catch","alert","state","render","defaultProps","contextType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,eAAe,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAQpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,kBANkB,GAMGC,CAAC,IAAI;AACtB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAA6BF,CAAC,CAACG,MAArC;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE;AADG,OAAd;AAIAd,MAAAA,cAAc,CAACe,SAAf,CAAyB;AACrBC,QAAAA,SAAS,EAAEN,WAAW,CAACO,KADF;AAErBC,QAAAA,QAAQ,EAAGP,WAAW,CAACM;AAFF,OAAzB,EAICE,IAJD,CAIMC,GAAG,IAAI;AACTV,QAAAA,WAAW,CAACO,KAAZ,GAAoB,EAApB;AACAN,QAAAA,WAAW,CAACM,KAAZ,GAAoB,EAApB;AACAhB,QAAAA,YAAY,CAACoB,aAAb,CAA2BD,GAAG,CAACE,SAA/B;AACA,aAAKf,KAAL,CAAWgB,YAAX;;AAEA,YAAGH,GAAG,CAACI,EAAP,EAAU;AACT,eAAKC,OAAL,CAAaC,WAAb,CAAyBhB,WAAW,CAACO,KAArC;AAEA;AACJ,OAdD,EAeCE,IAfD,CAeM,MAAM;AACRQ,QAAAA,MAAM,CAACC,QAAP,GAAkB,YAAlB;AACH,OAjBD,EAkBCC,KAlBD,CAkBOT,GAAG,IAAI;AACV,aAAKP,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEgB,KAAK,CAAC,iEAAD;AADF,SAAd;AAGH,OAtBD;AAwBH,KArCiB;;AAEd,SAAKC,KAAL,GAAc;AAACjB,MAAAA,KAAK,EAAG;AAAT,KAAd;AACH,GAXmD,CAapD;;;AAkCCkB,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,MAAd;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAG,MAAd;AAAqB,UAAA,EAAE,EAAC,aAAxB;AAAsC,UAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,aAA1B;AAAwC,UAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAhEkD;AAAlC5B,S,CAEX6B,Y,GAAe;AAClBV,EAAAA,YAAY,EAAE,MAAM,CAAE;AADJ,C;AAFJnB,S,CAMX8B,W,GAAchC,c","sourcesContent":["import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport SignUp from './SignUp'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.state  = {error : null};\n   }\n\n   //handle login auth and validation upon form submission\n   handleJwtLoginAuth = e => {\n       const {return_user, return_pass} = e.target;\n\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name: return_user.value,\n           password : return_pass.value\n       })\n       .then(res => {\n           return_user.value = '';\n           return_pass.value = '';\n           TokenService.saveAuthToken(res.authToken);\n           this.props.onvalidLogin();\n\n           if(res.ok){\n            this.context.setUserName(return_user.value)\n\n           }\n       })\n       .then(() => {\n           window.location = '/dashboard';\n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n    render(){\n\n        return(\n            <div>\n                <h2>Login or Sign Up to Continue</h2>\n                <form onSubmit>\n                    <label>Username</label>\n                    <input type = 'text' id=\"return-user\" name=\"return_user\"/>\n                    <label>Password</label>\n                    <input type=\"password\" id=\"return-pass\" name=\"return_pass\"/>\n                    <button type='submit' >\n                    Login\n                </button>\n                <Link to ='./sign-up'>Sign Up here!</Link>\n                </form>\n            </div>\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}