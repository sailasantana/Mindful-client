{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js\";\nimport React from 'react';\nimport Edit from '../Edit-Form/Edit';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport Entry from './Entry'; //import Edit from '../Edit-Form/Edit'\n\nimport TokenService from '../Auth-Service/token-services';\nimport config from '../config';\n\nclass Posts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteNote = id => {\n      this.props.history.push(`/dashboard`);\n    };\n\n    this.handleChange = () => {\n      this.setState({\n        change: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = TokenService.getAuthToken();\n    const options = {\n      method: 'GET',\n      headers: {\n        'session_token': token\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/api/validate`, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => {\n      this.setState({\n        message: responseJson.message\n      });\n    }).catch(err => {\n      console.log(err.message);\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const date = this.context.currentDateSelection;\n    const formattedDate = moment(date).format('MM/DD/YYYY');\n    console.log('abc');\n    let filteredEntries = this.context.posts.filter((posts, i) => formattedDate == moment(this.context.posts[i].modified).format('MM/DD/YYYY'));\n    console.log(filteredEntries);\n    const entries = filteredEntries.map((posts, i) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Entry-single\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Entry, {\n            history: this.props.history,\n            id: filteredEntries[i].id,\n            title: filteredEntries[i].title,\n            content: filteredEntries[i].content,\n            onDeleteNote: this.handleDeleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, filteredEntries[i].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: this.handleChange,\n      children: this.state.change ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Entry-all-title\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nPosts.contextType = journalContext;\nexport default Posts;\n{\n  /* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */\n}","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js"],"names":["React","Edit","Link","journalContext","moment","Entry","TokenService","config","Posts","Component","handleDeleteNote","id","props","history","push","handleChange","setState","change","componentDidMount","token","getAuthToken","options","method","headers","fetch","API_ENDPOINT","then","response","ok","json","Error","statusText","responseJson","message","catch","err","console","log","render","date","context","currentDateSelection","formattedDate","format","filteredEntries","posts","filter","i","modified","entries","map","title","content","state","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Edit from '../Edit-Form/Edit'\nimport {Link} from 'react-router-dom'\nimport journalContext from '../journal-context'\nimport moment from 'moment';\nimport Entry from './Entry'\n//import Edit from '../Edit-Form/Edit'\nimport TokenService from '../Auth-Service/token-services'\nimport config from '../config'\n\n\n\nclass Posts extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    handleDeleteNote = id => {\n        this.props.history.push(`/dashboard`)\n    };\n\n    handleChange = () => {\n        this.setState({change:true})\n    }\n  \n\n    render(){\n\n        const date = this.context.currentDateSelection\n        const formattedDate = moment(date).format('MM/DD/YYYY');\n     \n        console.log('abc')\n\n        let filteredEntries = this.context.posts.filter( (posts , i) => \n        formattedDate == moment(this.context.posts[i].modified).format('MM/DD/YYYY'))\n            console.log(filteredEntries)\n\n\n        const entries = filteredEntries.map((posts ,i) => {\n\n            return (    \n                <ul className= \"Entry-single\">\n                    \n                        <li key={filteredEntries[i].id}>\n                            <Entry\n                                history = {this.props.history}\n                                id={filteredEntries[i].id}\n                                title={filteredEntries[i].title}\n                                content={filteredEntries[i].content}\n                                onDeleteNote={this.handleDeleteNote}/>\n                        </li>\n                    \n                </ul>\n             \n            )\n        })\n\n        return(\n         <div onChange = {this.handleChange}>\n            {this.state.change ?\n            <div>\n            <h2 className='Entry-all-title'>{formattedDate}</h2>\n            <div>{entries}</div>\n            </div> : null} \n            </div>   \n         \n         \n        )\n    }\n}\n\n\n\n\n\n export default Posts\n\n\n{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}\n"]},"metadata":{},"sourceType":"module"}