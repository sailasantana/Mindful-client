{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config';\nimport TokenService from '../Auth-Service/token-services';\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitUpdate = e => {\n      e.preventDefault();\n      let updatedEntry = {\n        content: this.bodyInput.current.value\n      };\n      fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(updatedEntry)\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(e => Promise.reject(e));\n        }\n\n        return res.json();\n      }).then(post => {\n        this.context.updatePost(post);\n        this.props.history.push('/dashboard');\n      }).catch(error => {\n        alert({\n          error\n        });\n      });\n    };\n\n    this.bodyInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const token = TokenService.getAuthToken();\n    const options = {\n      method: 'GET',\n      headers: {\n        'session_token': token\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/api/validate`, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => {\n      this.setState({\n        message: responseJson.message\n      });\n    }).catch(err => {\n      console.log(err.message);\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    let getContent = this.context.posts.filter(post => post.id == this.props.match.params.id);\n    console.log(getContent[0].content);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"What Would you like to Change?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"body\",\n          id: \"body\",\n          ref: this.bodyInput,\n          defaultValue: getContent[0].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nEdit.defaultProps = {\n  history: {\n    goBack: () => {}\n  },\n  match: {\n    params: {}\n  }\n};\nEdit.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js"],"names":["React","Link","journalContext","config","TokenService","Edit","Component","constructor","props","submitUpdate","e","preventDefault","updatedEntry","content","bodyInput","current","value","fetch","API_ENDPOINT","context","user_name","match","params","id","method","headers","getAuthToken","body","JSON","stringify","then","res","ok","json","Promise","reject","post","updatePost","history","push","catch","error","alert","createRef","state","componentDidMount","token","options","response","Error","statusText","responseJson","setState","message","err","console","log","render","getContent","posts","filter","defaultProps","goBack","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport TokenService from '../Auth-Service/token-services';\n\nexport default class Edit extends React.Component {\n\n    static defaultProps = {\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = journalContext;\n\n    constructor(props){\n        super(props)\n        this.bodyInput = React.createRef();\n        this.state = {\n            error : null\n        }\n        \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    submitUpdate = (e) => {\n        e.preventDefault();\n\n        let updatedEntry = {\n            content: this.bodyInput.current.value\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`,  {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(updatedEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(post => {\n            this.context.updatePost(post)\n            \n            this.props.history.push('/dashboard')\n\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    }\n\n    render(){\n\n        let getContent = this.context.posts.filter(post => \n            post.id == this.props.match.params.id)\n        \n        console.log(getContent[0].content)\n\n        return (\n            <div>\n            <form onSubmit = {this.submitUpdate}>\n                    <label>What Would you like to Change?</label>\n                    <input \n                        type=\"textarea\"\n                        name=\"body\"\n                        id=\"body\"\n                        ref={this.bodyInput} \n                        defaultValue = {getContent[0].content}\n\n                    />\n                    <button >Edit</button>\n            </form>\n            \n            </div>\n        )\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}