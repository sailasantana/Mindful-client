{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js\";\nimport React from 'react';\nimport Edit from '../Edit-Form/Edit';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport Entry from './Entry'; //import Edit from '../Edit-Form/Edit'\n\nimport TokenService from '../Auth-Service/token-services';\nimport config from '../config';\nimport Stats from '../Stats/stats';\nimport ReactCalendar from '../Calendar/Calendar';\nimport LogOut from '../Login/Logout';\n\nclass Posts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteNote = id => {\n      this.props.history.push(`/dashboard`);\n    };\n  }\n\n  componentDidMount() {\n    const token = TokenService.getAuthToken();\n    const options = {\n      method: 'GET',\n      headers: {\n        'session_token': token\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/api/validate`, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => {\n      this.setState({\n        message: responseJson.message\n      });\n    }).catch(err => {\n      console.log(err.message);\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const date = this.context.currentDateSelection;\n    const formattedDate = moment(date).format('MM/DD/YYYY');\n    console.log(this.context.posts);\n    console.log(formattedDate, typeof formattedDate);\n    let filteredEntries = this.context.posts.filter((posts, i) => formattedDate == moment(this.context.posts[i].date_modified).format('MM/DD/YYYY'));\n    console.log(filteredEntries);\n    const entries = filteredEntries.map((posts, i) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Entry-single\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Entry, {\n            history: this.props.history,\n            id: filteredEntries[i].id,\n            title: filteredEntries[i].title,\n            content: filteredEntries[i].content,\n            onDeleteNote: this.handleDeleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, filteredEntries[i].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LogOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this), this.context.clicked && filteredEntries ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Entry-all-title\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nPosts.contextType = journalContext;\nexport default Posts;\n{\n  /* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */\n}","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js"],"names":["React","Edit","Link","journalContext","moment","Entry","TokenService","config","Stats","ReactCalendar","LogOut","Posts","Component","handleDeleteNote","id","props","history","push","componentDidMount","token","getAuthToken","options","method","headers","fetch","API_ENDPOINT","then","response","ok","json","Error","statusText","responseJson","setState","message","catch","err","console","log","render","date","context","currentDateSelection","formattedDate","format","posts","filteredEntries","filter","i","date_modified","entries","map","title","content","clicked","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Edit from '../Edit-Form/Edit'\nimport {Link} from 'react-router-dom'\nimport journalContext from '../journal-context'\nimport moment from 'moment';\nimport Entry from './Entry'\n//import Edit from '../Edit-Form/Edit'\nimport TokenService from '../Auth-Service/token-services'\nimport config from '../config'\nimport Stats from '../Stats/stats'\nimport ReactCalendar from '../Calendar/Calendar'\nimport LogOut from '../Login/Logout'\n\n\n\nclass Posts extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    handleDeleteNote = id => {\n        this.props.history.push(`/dashboard`)\n    };\n  \n\n    render(){\n\n        const date = this.context.currentDateSelection\n        const formattedDate = moment(date).format('MM/DD/YYYY');\n     \n        console.log(this.context.posts)\n        console.log(formattedDate,typeof(formattedDate))\n        let filteredEntries = this.context.posts.filter( (posts , i) => \n        formattedDate == moment(this.context.posts[i].date_modified).format('MM/DD/YYYY'))\n        console.log(filteredEntries)\n\n\n\n\n\n        const entries = filteredEntries.map((posts ,i) => {\n\n            return (    \n                <ul className= \"Entry-single\">\n                    \n                        <li key={filteredEntries[i].id}>\n                            <Entry\n                                history = {this.props.history}\n                                id={filteredEntries[i].id}\n                                title={filteredEntries[i].title}\n                                content={filteredEntries[i].content}\n                                onDeleteNote={this.handleDeleteNote}/>\n                        </li>\n                    \n                </ul>\n             \n            )\n        })\n\n        return(\n         <div>  \n         <LogOut />    \n         <ReactCalendar /> \n         <Stats />    \n         {this.context.clicked && filteredEntries ?\n         <div>\n            <h2 className='Entry-all-title'>{formattedDate}</h2>\n            <div>{entries}</div>\n         </div> \n         : null}\n         </div> \n        )\n    }\n}\n\n\n\n\n\n export default Posts\n\n\n{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}\n"]},"metadata":{},"sourceType":"module"}