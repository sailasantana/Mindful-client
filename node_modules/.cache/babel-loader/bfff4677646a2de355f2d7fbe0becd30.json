{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context'; //import SignUp from './SignUp'\n\nimport config from '../config';\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJwtLoginAuth = e => {\n      e.preventDefault(); //const {return_user, return_pass} = e.target.value;\n      //console.log(this.userInput.current.value)\n      //console.log(this.passInput.current.value)\n\n      this.setState({\n        error: null\n      });\n      AuthApiService.postLogin({\n        user_name: this.userInput.current.value,\n        password: this.passInput.current.value\n      }).then(res => {\n        console.log(res);\n\n        if (res.ok) {\n          console.log('abc');\n          this.context.setUserName(this.userInput.current.value);\n        }\n\n        TokenService.saveAuthToken(res.authToken);\n        this.props.onvalidLogin();\n        console.log('bc');\n        console.log('abc');\n        console.log(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`);\n        fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`, {\n          headers: {\n            'authorization': `bearer ${TokenService.getAuthToken()}`\n          }\n        }).then(res => {\n          if (!res.ok) {\n            return res.json().then(e => Promise.reject(e));\n          }\n\n          return res.json();\n        }).then(posts => {\n          this.context.updatePostsInState(posts);\n        }).catch(error => {\n          alert({\n            error\n          });\n        });\n      }).then(() => {\n        cons;\n        window.location = '/dashboard';\n      }).catch(res => {\n        this.setState({\n          error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n        });\n      });\n    };\n\n    this.userInput = /*#__PURE__*/React.createRef();\n    this.passInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      error: null,\n      posts: []\n    };\n  } //handle login auth and validation upon form submission\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login or Sign Up to Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleJwtLoginAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.userInput,\n          type: \"text\",\n          id: \"return_user\",\n          name: \"return_user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.passInput,\n          type: \"password\",\n          id: \"return_pass\",\n          name: \"return_pass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./sign-up\",\n          children: \"Sign Up here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLoginPage.defaultProps = {\n  onvalidLogin: () => {}\n};\nLoginPage.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js"],"names":["React","Link","AuthApiService","TokenService","journalContext","config","LoginPage","Component","constructor","props","handleJwtLoginAuth","e","preventDefault","setState","error","postLogin","user_name","userInput","current","value","password","passInput","then","res","console","log","ok","context","setUserName","saveAuthToken","authToken","onvalidLogin","API_ENDPOINT","fetch","headers","getAuthToken","json","Promise","reject","posts","updatePostsInState","catch","alert","cons","window","location","createRef","state","render","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\n//import SignUp from './SignUp'\nimport config from '../config'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n   //handle login auth and validation upon form submission\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       //const {return_user, return_pass} = e.target.value;\n       //console.log(this.userInput.current.value)\n       //console.log(this.passInput.current.value)\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n           console.log(res)\n        if(res.ok){\n            console.log('abc')\n        \n            this.context.setUserName(this.userInput.current.value)\n           }\n         \n           TokenService.saveAuthToken(res.authToken);\n           this.props.onvalidLogin();\n           console.log('bc')\n\n           \n            console.log('abc')\n            console.log(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`)\n            fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`, {\n                headers: {\n                  'authorization':`bearer ${TokenService.getAuthToken()}`\n                }\n              })\n              .then(res => {\n                if(!res.ok){\n                  return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n              })\n              .then(posts => {\n                this.context.updatePostsInState(posts)\n              })\n              .catch(error => {\n                alert({error})\n              })\n             \n\n\n           \n       })\n       .then(() => {\n           cons\n           window.location = '/dashboard';\n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return(\n            <div>\n                <h2>Login or Sign Up to Continue</h2>\n                <form onSubmit = {this.handleJwtLoginAuth}>\n                    <label>Username</label>\n                    < input  ref={this.userInput} type = 'text' id=\"return_user\" name=\"return_user\"/>\n                    <label>Password</label>\n                    <input  ref={this.passInput}  type=\"password\" id=\"return_pass\" name=\"return_pass\"/>\n                    <button type='submit' >\n                    Login\n                </button>\n                <Link to ='./sign-up'>Sign Up here!</Link>\n                </form>\n            </div>\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}