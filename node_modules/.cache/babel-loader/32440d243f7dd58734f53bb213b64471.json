{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config';\nimport './LoginSignUp.css';\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJwtLoginAuth = e => {\n      e.preventDefault();\n      this.setState({\n        error: null\n      });\n      AuthApiService.postLogin({\n        user_name: this.userInput.current.value,\n        password: this.passInput.current.value\n      }).then(res => {\n        localStorage.setItem('user_name', this.userInput.current.value);\n        this.context.setUserName(this.userInput.current.value);\n        TokenService.saveAuthToken(res.token);\n        this.props.onvalidLogin();\n        this.context.setPostsforStats();\n      }).then(() => {\n        this.props.history.push('/dashboard');\n      }).catch(res => {\n        this.setState({\n          error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n        });\n      });\n    };\n\n    this.userInput = /*#__PURE__*/React.createRef();\n    this.passInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      error: null,\n      posts: []\n    };\n  } //handle login auth and validation upon form submission and \n  //get user's entries + set them into context\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"/logo.png\",\n        width: \"210\",\n        height: \"180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"about-app\",\n        children: \"Mindfulness Through Daily Journaling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-triangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Log in to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-container\",\n        onSubmit: this.handleJwtLoginAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"username\",\n            ref: this.userInput,\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            ref: this.passInput,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Log in\",\n          className: \"login-button\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Sign-up-prompt\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./sign-up\",\n          children: \"New User? Sign Up here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Demo Username: Thinkful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Demo Password: @Thinkful1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLoginPage.defaultProps = {\n  onvalidLogin: () => {}\n};\nLoginPage.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js"],"names":["React","Link","AuthApiService","TokenService","journalContext","config","LoginPage","Component","constructor","props","handleJwtLoginAuth","e","preventDefault","setState","error","postLogin","user_name","userInput","current","value","password","passInput","then","res","localStorage","setItem","context","setUserName","saveAuthToken","token","onvalidLogin","setPostsforStats","history","push","catch","alert","createRef","state","posts","render","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport './LoginSignUp.css'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n\n\n   //handle login auth and validation upon form submission and \n   //get user's entries + set them into context\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n           localStorage.setItem( 'user_name', this.userInput.current.value );       \n           this.context.setUserName(this.userInput.current.value) \n           TokenService.saveAuthToken(res.token);\n           this.props.onvalidLogin();\n           this.context.setPostsforStats()\n\n\n           \n       })\n       .then(() => {\n           this.props.history.push('/dashboard') \n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return (\n            <div className=\"login\">   \n            <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n              <p className = \"about-app\">Mindfulness Through Daily Journaling</p>\n              <div className=\"login-triangle\"></div>\n              <h2 className=\"login-header\">Log in to continue</h2>\n              <form className=\"login-container\"  onSubmit = {this.handleJwtLoginAuth}>\n                <p><input type=\"username\" ref={this.userInput} placeholder=\"Username\"/></p>\n                <p><input type=\"password\" ref={this.passInput} placeholder=\"Password\"/></p>\n                <button type=\"submit\" value=\"Log in\" className='login-button'>Log In</button>\n              </form>\n             <p className= \"Sign-up-prompt\"><Link to ='./sign-up'>New User? Sign Up here!</Link></p> \n             <div className = \"demo-container\">\n             <div>Demo Username: Thinkful</div>\n             <div>Demo Password: @Thinkful1!</div>\n             </div>\n            </div>)\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}