{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/App.js\";\nimport React, { Component } from 'react';\nimport posts from './Entries/Entries';\nimport Form from './Form/Form';\nimport ReactCalendar from './Calendar/Calendar';\nimport Login from './Login/Login';\nimport SignUp from './Login/SignUp';\nimport { Route } from 'react-router-dom';\nimport Edit from './Edit-Form/Edit';\nimport TokenService from './Auth-Service/token-services';\nimport journalContext from './journal-context';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      user_name: ''\n    };\n\n    this.setUserName = user_name => {\n      this.setState({\n        user_name: user_name\n      });\n    };\n\n    this.removePost = index => {\n      const {\n        posts\n      } = this.state;\n      this.setState({\n        posts: posts.filter((post, i) => {\n          return i != index;\n        })\n      });\n    };\n\n    this.handleSubmit = entry => {\n      this.setState({\n        posts: [...this.state.posts, post]\n      });\n    };\n\n    this.handleUpdate = updatedPost => {\n      const updatedPosts = this.state.posts.map(post => {\n        return post.id === updatedPost.id ? updatedPost : post;\n      });\n      this.setState({\n        posts: updatedPosts\n      });\n    };\n  }\n\n  componentDidMount() {\n    //check for login credentials\n    if (!TokenService.getAuthToken()) {\n      return;\n    } //how do I send user name here? it should be coming from req.params\n\n\n    fetch(`${config.API_ENDPOINT}/api/${this.state.user_name}`, {\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        return res.json().then(e => Promise.reject(e));\n      }\n\n      return res.json();\n    }).then(posts => {\n      this.setState({\n        posts\n      });\n    }).catch(error => {\n      alert({\n        error\n      });\n    });\n  }\n\n  render() {\n    const postValues = {\n      posts: this.state.posts,\n      addPost: this.handleSubmit,\n      deletePost: this.removePost,\n      updatePost: this.handleUpdate,\n      setUserName: this.setUserName,\n      user_name: this.state.user_name\n    }; //const { posts } = this.state;\n\n    return /*#__PURE__*/_jsxDEV(journalContext.Provider, {\n      value: postValues,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mind Your Moment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          component: ReactCalendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          render: props => /*#__PURE__*/_jsxDEV(Form, {\n            handleSubmit: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          render: props => /*#__PURE__*/_jsxDEV(Entries, {\n            entryData: posts,\n            removeEntry: this.removePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          component: SignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          component: Edit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/App.js"],"names":["React","Component","posts","Form","ReactCalendar","Login","SignUp","Route","Edit","TokenService","journalContext","App","state","user_name","setUserName","setState","removePost","index","filter","post","i","handleSubmit","entry","handleUpdate","updatedPost","updatedPosts","map","id","componentDidMount","getAuthToken","fetch","config","API_ENDPOINT","headers","then","res","ok","json","e","Promise","reject","catch","error","alert","render","postValues","addPost","deletePost","updatePost","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport posts from './Entries/Entries';\nimport Form from './Form/Form';\nimport ReactCalendar from './Calendar/Calendar';\nimport Login from './Login/Login'\nimport SignUp from './Login/SignUp'\nimport { Route } from 'react-router-dom'\nimport Edit from './Edit-Form/Edit'\nimport TokenService from './Auth-Service/token-services';\nimport journalContext from './journal-context';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    user_name:''\n  }\n\n  componentDidMount(){\n   //check for login credentials\n   if(!TokenService.getAuthToken()){\n     return;\n   }\n   //how do I send user name here? it should be coming from req.params\n   fetch(`${config.API_ENDPOINT}/api/${this.state.user_name}`, {\n     headers: {\n       'authorization':`bearer ${TokenService.getAuthToken()}`\n     }\n   })\n   .then(res => {\n     if(!res.ok){\n       return res.json().then(e => Promise.reject(e))\n     }\n     return res.json()\n   })\n   .then(posts => {\n     this.setState({posts})\n   })\n   .catch(error => {\n     alert({error})\n   })\n  }\n\n  setUserName = user_name => {\n    this.setState({user_name: user_name})\n  }\n\n  removePost = index => {\n    const { posts } = this.state\n\n    this.setState({\n      posts: posts.filter ((post, i) => {\n        return i != index\n      })\n    })\n  }\n\n  handleSubmit = entry => {\n    this.setState({ posts: [...this.state.posts, post]})\n  }\n\n  handleUpdate = updatedPost => {\n    const updatedPosts = this.state.posts.map(post => {\n      return post.id === updatedPost.id ? updatedPost : post\n    })\n\n    this.setState({\n      posts : updatedPosts\n    })\n  }\n\n\n\n  render () {\n\n    const postValues = {\n      posts: this.state.posts,\n      addPost : this.handleSubmit,\n      deletePost: this.removePost,\n      updatePost: this.handleUpdate,\n      setUserName: this.setUserName,\n      user_name: this.state.user_name\n\n    }\n    //const { posts } = this.state;\n    \n    return (\n      <journalContext.Provider value={postValues}>\n\n      <div className=\"App\">\n        <h1>Mind Your Moment</h1>\n        <Route exact path = '/' component={Login}/>\n        <Route path ='/dashboard' component={ReactCalendar}/>\n        <Route\n        path='/dashboard'\n        render={(props) => (\n         <Form\n         handleSubmit={this.handleSubmit}/>      \n         )}/>\n        \n        <Route\n        path='/dashboard'\n        render={(props) => (\n         <Entries\n         entryData={posts} removeEntry={this.removePost}/>      \n         )\n       }\n      />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/edit' component={Edit} />\n      </div>\n      </journalContext.Provider >\n\n    );\n  }\n\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}