{"ast":null,"code":"import _slicedToArray from\"/Users/rockerbox/capstones/c2-client/mindful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext,useState}from\"react\";import Calendar from\"react-calendar\";import'./Calendar.css';import journalContext from\"../journal-context\";import'react-calendar/dist/Calendar.css';import moment from'moment';function ReactCalendar(){var context=useContext(journalContext);var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var onChange=function onChange(date){setDate(date);context.updateCurrentDate(date);context.setClicked(true);};var posts=context.posts;var allDates=function allDates(){var array=[];if(!posts){return;}else{posts.map(function(posts,i){var formattedDate=moment(context.posts[i].modified).format('MM/DD/YYYY');array.push(formattedDate);return;});return array;}};var customTile=function customTile(_ref){var activeStartDate=_ref.activeStartDate,date=_ref.date,view=_ref.view,i=_ref.i;return view==='month'&&allDates().includes(moment(date).format('MM/DD/YYYY'))?/*#__PURE__*/_jsx(\"img\",{src:\"https://media4.giphy.com/media/Kg9JwOFEyoK75CzQSK/source.gif\",width:\"23\",height:\"17\"}):null;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"welcome-message\",children:[\"Welcome Back @\",context.user_name,\"!\"]}),/*#__PURE__*/_jsx(Calendar,{className:\"calendar-table\",onChange:onChange,value:date,maxDate:new Date(),tileContent:customTile})]});}export default ReactCalendar;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js"],"names":["React","useContext","useState","Calendar","journalContext","moment","ReactCalendar","context","Date","date","setDate","onChange","updateCurrentDate","setClicked","posts","allDates","array","map","i","formattedDate","modified","format","push","customTile","activeStartDate","view","includes","user_name"],"mappings":"2PACA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,oBAA3B,CACA,MAAO,kCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAIC,QAASC,CAAAA,aAAT,EAAwB,CAEvB,GAAMC,CAAAA,OAAO,CAAGN,UAAU,CAACG,cAAD,CAA1B,CAFuB,cAGCF,QAAQ,CAAC,GAAIM,CAAAA,IAAJ,EAAD,CAHT,wCAGhBC,IAHgB,eAGVC,OAHU,eAKvB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAF,IAAI,CAAI,CACvBC,OAAO,CAACD,IAAD,CAAP,CACAF,OAAO,CAACK,iBAAR,CAA0BH,IAA1B,EACAF,OAAO,CAACM,UAAR,CAAmB,IAAnB,EAED,CALD,CASA,GAAIC,CAAAA,KAAK,CAAGP,OAAO,CAACO,KAApB,CAEA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEjB,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAG,CAACF,KAAJ,CAAU,CACN,OACH,CAFD,IAGK,CAEHA,KAAK,CAACG,GAAN,CAAW,SAACH,KAAD,CAASI,CAAT,CAAe,CACtB,GAAIC,CAAAA,aAAa,CAAGd,MAAM,CAACE,OAAO,CAACO,KAAR,CAAcI,CAAd,EAAiBE,QAAlB,CAAN,CAAkCC,MAAlC,CAAyC,YAAzC,CAApB,CACCL,KAAK,CAACM,IAAN,CAAWH,aAAX,EACA,OAEF,CALH,EAMC,MAAOH,CAAAA,KAAP,CACJ,CACF,CAjBD,CAqBA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,UAAGC,CAAAA,eAAH,MAAGA,eAAH,CAAoBf,IAApB,MAAoBA,IAApB,CAA0BgB,IAA1B,MAA0BA,IAA1B,CAA+BP,CAA/B,MAA+BA,CAA/B,OACnBO,CAAAA,IAAI,GAAK,OAAT,EAAoBV,QAAQ,GAAGW,QAAX,CAAoBrB,MAAM,CAACI,IAAD,CAAN,CAAaY,MAAb,CAAoB,YAApB,CAApB,CAApB,cAA8E,YAAK,GAAG,CAAC,8DAAT,CAAwE,KAAK,CAAC,IAA9E,CAAmF,MAAM,CAAC,IAA1F,EAA9E,CAAiL,IAD9J,EAAnB,CAGA,mBACE,oCACE,YAAI,SAAS,CAAG,iBAAhB,4BAAiDd,OAAO,CAACoB,SAAzD,OADF,cAEE,KAAC,QAAD,EAAW,SAAS,CAAG,gBAAvB,CAAwC,QAAQ,CAAIhB,QAApD,CAA8D,KAAK,CAAIF,IAAvE,CAA6E,OAAO,CAAG,GAAID,CAAAA,IAAJ,EAAvF,CAAmG,WAAW,CAAEe,UAAhH,EAFF,GADF,CAOA,CAMF,cAAejB,CAAAA,aAAf","sourcesContent":["  \nimport React, { useContext, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport './Calendar.css';\nimport journalContext from \"../journal-context\";\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\n\n\n   \n function ReactCalendar(){\n\n  const context = useContext(journalContext)\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n    context.updateCurrentDate(date)\n    context.setClicked(true)\n\n  }\n\n  \n \n  let posts = context.posts \n\n  let allDates = () => {\n\n      let array = [];\n      \n      if(!posts){\n          return;\n      }       \n      else {\n\n        posts.map( (posts , i) => {\n            let formattedDate = moment(context.posts[i].modified).format('MM/DD/YYYY')\n             array.push(formattedDate)\n             return;\n\n          })\n         return array;  \n    } \n  }       \n\n\n\n  const customTile = ({ activeStartDate, date, view,i }) => \n  view === 'month' && allDates().includes(moment(date).format('MM/DD/YYYY'))  ? <img src=\"https://media4.giphy.com/media/Kg9JwOFEyoK75CzQSK/source.gif\" width=\"23\" height=\"17\"/> : null\n\n  return (\n    <div>\n      <h2 className = \"welcome-message\">Welcome Back @{context.user_name}!</h2>\n      <Calendar  className = \"calendar-table\" onChange = {onChange} value = {date} maxDate= {new Date()} tileContent={customTile}/>     \n    </div>\n  )\n   \n }\n\n\n\n\n\nexport default ReactCalendar;"]},"metadata":{},"sourceType":"module"}