{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config';\nimport './LoginSignUp.css';\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJwtLoginAuth = e => {\n      e.preventDefault();\n      this.setState({\n        error: null\n      });\n      AuthApiService.postLogin({\n        user_name: this.userInput.current.value,\n        password: this.passInput.current.value\n      }).then(res => {\n        localStorage.setItem('user_name', this.userInput.current.value);\n        this.context.setUserName(this.userInput.current.value);\n        TokenService.saveAuthToken(res.token);\n        this.props.onvalidLogin();\n        fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`, {\n          headers: {\n            'session_token': `${TokenService.getAuthToken()}`\n          }\n        }).then(res => {\n          if (!res.ok) {\n            return res.json().then(e => Promise.reject(e));\n          }\n\n          return res.json();\n        }).then(posts => {\n          this.context.updatePostsInState(posts);\n        }).catch(error => {\n          alert({\n            error\n          });\n        });\n      }).then(() => {\n        this.props.history.push('/dashboard');\n      }).catch(res => {\n        this.setState({\n          error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n        });\n      });\n    };\n\n    this.userInput = /*#__PURE__*/React.createRef();\n    this.passInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      error: null,\n      posts: []\n    };\n  } //handle login auth and validation upon form submission and \n  //get user's entries + set them into context\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"/logo.png\",\n        width: \"210\",\n        height: \"180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-triangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Log in to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-container\",\n        onSubmit: this.handleJwtLoginAuth,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"username\",\n            ref: this.userInput,\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            ref: this.passInput,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Log in\",\n          className: \"login-button\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Sign-up-prompt\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./sign-up\",\n          children: \"New User? Sign Up here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLoginPage.defaultProps = {\n  onvalidLogin: () => {}\n};\nLoginPage.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js"],"names":["React","Link","AuthApiService","TokenService","journalContext","config","LoginPage","Component","constructor","props","handleJwtLoginAuth","e","preventDefault","setState","error","postLogin","user_name","userInput","current","value","password","passInput","then","res","localStorage","setItem","context","setUserName","saveAuthToken","token","onvalidLogin","fetch","API_ENDPOINT","headers","getAuthToken","ok","json","Promise","reject","posts","updatePostsInState","catch","alert","history","push","createRef","state","render","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport './LoginSignUp.css'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n\n\n   //handle login auth and validation upon form submission and \n   //get user's entries + set them into context\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n           localStorage.setItem( 'user_name', this.userInput.current.value );\n           this.context.setUserName(this.userInput.current.value) \n           TokenService.saveAuthToken(res.token);\n           this.props.onvalidLogin();\n           \n\n            fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`, {\n                headers: {\n                  'session_token':`${TokenService.getAuthToken()}`\n                }\n              })\n              .then(res => {\n                if(!res.ok){\n                  return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n              })\n\n              .then(posts => {\n\n                this.context.updatePostsInState(posts)\n              })\n              .catch(error => {\n                alert({error})\n              })\n           \n       })\n       .then(() => {\n           this.props.history.push('/dashboard') \n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return (\n            <div class=\"login\">   \n            <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n              <div className=\"login-triangle\"></div>\n              <h2 className=\"login-header\">Log in to continue</h2>\n              <form className=\"login-container\"  onSubmit = {this.handleJwtLoginAuth}>\n                <p><input type=\"username\" ref={this.userInput} placeholder=\"Username\"/></p>\n                <p><input type=\"password\" ref={this.passInput} placeholder=\"Password\"/></p>\n                <button type=\"submit\" value=\"Log in\" className='login-button'>Log In</button>\n              </form>\n             <p className= 'Sign-up-prompt'><Link to ='./sign-up'>New User? Sign Up here!</Link></p> \n            </div>)\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}