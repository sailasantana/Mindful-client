{"ast":null,"code":"import _classCallCheck from\"/Users/rockerbox/capstones/c2-client/mindful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rockerbox/capstones/c2-client/mindful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/rockerbox/capstones/c2-client/mindful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/rockerbox/capstones/c2-client/mindful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Edit from'../Edit-Form/Edit';import{Link}from'react-router-dom';import journalContext from'../journal-context';import moment from'moment';import Entry from'./Entry';//import Edit from '../Edit-Form/Edit'\nimport TokenService from'../Auth-Service/token-services';import config from'../config';var Posts=/*#__PURE__*/function(_React$Component){_inherits(Posts,_React$Component);var _super=_createSuper(Posts);function Posts(){var _this;_classCallCheck(this,Posts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleDeleteNote=function(id){_this.props.history.push(\"/dashboard\");};return _this;}_createClass(Posts,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var token=TokenService.getAuthToken();var options={method:'GET',headers:{'session_token':token}};fetch(\"\".concat(config.API_ENDPOINT,\"/api/validate\"),options).then(function(response){if(response.ok){return response.json();}throw new Error(response.statusText);}).then(function(responseJson){_this2.setState({message:responseJson.message});}).catch(function(err){console.log(err.message);_this2.props.history.push('/');});}},{key:\"render\",value:function render(){var _this3=this;var date=this.context.currentDateSelection;var formattedDate=moment(date).format('MM/DD/YYYY');var filteredEntries=this.context.posts.filter(function(posts,i){return formattedDate==moment(_this3.context.posts[i].modified).format('MM/DD/YYYY');});console.log(filteredEntries);var entries=filteredEntries.map(function(posts,i){return/*#__PURE__*/_jsx(\"ul\",{className:\"Entry-single\",children:/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Entry,{history:_this3.props.history,id:filteredEntries[i].id,title:filteredEntries[i].title,content:filteredEntries[i].content,onDeleteNote:_this3.handleDeleteNote})},filteredEntries[i].id)});});return/*#__PURE__*/_jsx(\"div\",{children:this.context.clicked&&filteredEntries?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"Entry-all-title\",children:formattedDate}),/*#__PURE__*/_jsx(\"div\",{children:entries})]}):null});}}]);return Posts;}(React.Component);Posts.contextType=journalContext;export default Posts;{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js"],"names":["React","Edit","Link","journalContext","moment","Entry","TokenService","config","Posts","handleDeleteNote","id","props","history","push","token","getAuthToken","options","method","headers","fetch","API_ENDPOINT","then","response","ok","json","Error","statusText","responseJson","setState","message","catch","err","console","log","date","context","currentDateSelection","formattedDate","format","filteredEntries","posts","filter","i","modified","entries","map","title","content","clicked","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Edit from '../Edit-Form/Edit'\nimport {Link} from 'react-router-dom'\nimport journalContext from '../journal-context'\nimport moment from 'moment';\nimport Entry from './Entry'\n//import Edit from '../Edit-Form/Edit'\nimport TokenService from '../Auth-Service/token-services'\nimport config from '../config'\n\n\n\nclass Posts extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    handleDeleteNote = id => {\n        this.props.history.push(`/dashboard`)\n    };\n  \n\n    render(){\n\n        const date = this.context.currentDateSelection\n        const formattedDate = moment(date).format('MM/DD/YYYY');\n     \n\n        let filteredEntries = this.context.posts.filter( (posts , i) => \n        formattedDate == moment(this.context.posts[i].modified).format('MM/DD/YYYY'))\n        console.log(filteredEntries)\n\n\n\n        const entries = filteredEntries.map((posts ,i) => {\n\n            return (    \n                <ul className= \"Entry-single\">\n                    \n                        <li key={filteredEntries[i].id}>\n                            <Entry\n                                history = {this.props.history}\n                                id={filteredEntries[i].id}\n                                title={filteredEntries[i].title}\n                                content={filteredEntries[i].content}\n                                onDeleteNote={this.handleDeleteNote}/>\n                        </li>\n                    \n                </ul>\n             \n            )\n        })\n\n        return(\n         <div>  \n         {this.context.clicked && filteredEntries ?\n         <div>\n            <h2 className='Entry-all-title'>{formattedDate}</h2>\n            <div>{entries}</div>\n         </div> \n         : null}\n         </div> \n        )\n    }\n}\n\n\n\n\n\n export default Posts\n\n\n{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}\n"]},"metadata":{},"sourceType":"module"}