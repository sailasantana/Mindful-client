{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js\";\nimport React, { Component } from 'react';\nimport journalContext from '../journal-context';\nimport Mindful from '../MindfulMoment/mindful-store';\nimport config from '../config';\nimport { Link } from 'react-router-dom';\nimport TokenService from '../Auth-Service/token-services';\nimport './Form.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = e => {\n      e.preventDefault();\n      console.log('abc');\n      this.setState({\n        error: null,\n        submitted: true\n      });\n      let newEntry = {\n        title: this.titleInput.current.value,\n        content: this.bodyInput.current.value\n      };\n      fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(newEntry)\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(e => Promise.reject(e));\n        }\n\n        return res.json();\n      }).then(post => {\n        this.context.addPost(post);\n      }).catch(error => {\n        alert({\n          error\n        });\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        submitted: false\n      });\n    };\n\n    this.titleInput = /*#__PURE__*/React.createRef();\n    this.bodyInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      title: '',\n      body: '',\n      error: null,\n      submitted: false,\n      clicked: false\n    };\n  }\n\n  componentDidMount() {\n    const token = TokenService.getAuthToken();\n    const options = {\n      method: 'GET',\n      headers: {\n        'session_token': token\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/api/validate`, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => {\n      this.setState({\n        message: responseJson.message\n      });\n    }).catch(err => {\n      console.log(err.message);\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    let max = 49;\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    let quote = Mindful[getRandomInt(max)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Journal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Journal-form-title\",\n        children: [\"Add Today's Entry or \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/scream\",\n          children: \"Scream and Release\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Journal-form\",\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter title\",\n          ref: this.titleInput,\n          type: \"text\",\n          className: \"Entry-title\",\n          name: \"title\",\n          id: \"title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What's up?\",\n          ref: this.bodyInput,\n          type: \"textarea\",\n          className: \"Entry-content\",\n          name: \"body\",\n          id: \"body\",\n          rows: \"28\",\n          cols: \"70\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Journal-submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mindful-quotes\",\n        children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Good job getting a Mindful Moment in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\\"\", quote, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleClick,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nForm.contextType = journalContext;\nexport default Form;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js"],"names":["React","Component","journalContext","Mindful","config","Link","TokenService","Form","constructor","props","submitForm","e","preventDefault","console","log","setState","error","submitted","newEntry","title","titleInput","current","value","content","bodyInput","fetch","API_ENDPOINT","context","user_name","method","headers","getAuthToken","body","JSON","stringify","then","res","ok","json","Promise","reject","post","addPost","catch","alert","handleClick","createRef","state","clicked","componentDidMount","token","options","response","Error","statusText","responseJson","message","err","history","push","render","max","getRandomInt","Math","floor","random","quote","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport journalContext from '../journal-context'\nimport Mindful from '../MindfulMoment/mindful-store'\nimport config from '../config'\nimport { Link } from 'react-router-dom'\nimport TokenService from '../Auth-Service/token-services'\nimport './Form.css'\n\n\nclass Form extends Component {\n\n   \n    static contextType = journalContext\n\n    constructor(props) {\n        super(props)\n        this.titleInput = React.createRef();\n        this.bodyInput = React.createRef();       \n\n        this.state = {\n            title: '',\n            body: '',\n            error: null,\n            submitted: false,\n            clicked : false\n        }\n\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n \n    submitForm = (e) => {\n\n        e.preventDefault();\n        console.log('abc')\n        this.setState({\n            error: null,\n            submitted: true\n        })\n\n        let newEntry = {\n            title : this.titleInput.current.value,\n            content: this.bodyInput.current.value\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}`,  {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(newEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(post => {\n            this.context.addPost(post)\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    \n        \n\n    }\n\n    handleClick = () => {\n        this.setState({submitted: false})\n    }\n\n\n\n    render() {\n\n        let max = 49;\n         \n        function getRandomInt(max) {\n            return Math.floor(Math.random() * Math.floor(max));\n          }\n        \n        let quote = Mindful[getRandomInt(max)]\n\n\n        return (\n            <div className= 'Journal-container'>\n                <h2 className = \"Journal-form-title\">Add Today's Entry or <Link to = '/scream'>Scream and Release</Link></h2>\n                <form className = \"Journal-form\" onSubmit={this.submitForm}>\n                    <label>Title</label>\n                        <input \n                            placeholder=\"Enter title\"\n                            ref = {this.titleInput}\n                            type=\"text\"\n                            className = 'Entry-title'\n                            name=\"title\"\n                            id=\"title\"\n                            required\n                            />\n                        <label>Entry</label>\n                        <textarea \n                            placeholder=\"What's up?\"\n                            ref = {this.bodyInput}\n                            type=\"textarea\"\n                            className = 'Entry-content'\n                            name=\"body\"\n                            id=\"body\"\n                            rows=\"28\" \n                            cols=\"70\"\n                            required\n                             />\n                        <button className = \"Journal-submit\">Submit</button>\n\n                </form>\n                        <div className = \"mindful-quotes\"> \n                        {this.state.submitted ? \n                        <div>\n                        <h2>Good job getting a Mindful Moment in! \n                            </h2>\n                        <p>\"{quote}\"</p>\n                        <button onClick = {this.handleClick}>x</button>\n        \n                        </div> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}