{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js\";\nimport React from 'react';\nimport getNumberofEntries from '../helper-funcs';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport './stats.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TokenService from '../Auth-Service/token-services';\nimport config from '../config';\nexport default class Stats extends React.Component {\n  componentDidMount() {\n    const token = TokenService.getAuthToken();\n    const options = {\n      method: 'GET',\n      headers: {\n        'session_token': token\n      }\n    };\n    fetch(`${config.API_ENDPOINT}/api/validate`, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => {\n      this.setState({\n        message: responseJson.message\n      });\n    }).catch(err => {\n      console.log(err.message);\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    let posts = this.context.posts;\n\n    let maxDateStat = () => {\n      let array = [];\n\n      if (!posts) {\n        return;\n      } else {\n        posts.map((posts, i) => {\n          let formattedDate = moment(this.context.posts[i].modified).format('MM/DD/YYYY');\n          array.push(formattedDate);\n          return;\n        });\n        let max = new Date(Math.max(...array.map(date => new Date(date))));\n        let formattedMax = moment(max).format('MM/DD/YYYY');\n        return formattedMax;\n      }\n    };\n\n    let statsToDisplay = maxDateStat();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-container\",\n      children: [this.context.posts ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat one\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"coffee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-title\",\n          children: \"Last Moment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-1\",\n          children: statsToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 39\n      }, this) : null, this.context.posts ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat two\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-title\",\n          children: \"Moments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-2\",\n          children: [\" \", posts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 111\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-entry\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nStats.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js"],"names":["React","getNumberofEntries","journalContext","moment","Link","FontAwesomeIcon","TokenService","config","Stats","Component","componentDidMount","token","getAuthToken","options","method","headers","fetch","API_ENDPOINT","then","response","ok","json","Error","statusText","responseJson","setState","message","catch","err","console","log","props","history","push","render","posts","context","maxDateStat","array","map","i","formattedDate","modified","format","max","Date","Math","date","formattedMax","statsToDisplay","length","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getNumberofEntries from '../helper-funcs';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport './stats.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TokenService from '../Auth-Service/token-services';\nimport config from '../config';\n\n\n\n\nexport default class Stats extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n\n    render(){\n\n    let posts = this.context.posts \n\n    let maxDateStat = () => {\n\n        let array = [];\n        \n        if(!posts){\n            return;\n        }       \n        else {\n\n          posts.map( (posts , i) => {\n              let formattedDate = moment(this.context.posts[i].modified).format('MM/DD/YYYY')\n               array.push(formattedDate)\n               return;\n  \n            })\n            \n            let max = new Date(Math.max(...array.map(date => new Date(date))))\n            let formattedMax = moment(max).format('MM/DD/YYYY')\n            return formattedMax;\n    \n      \n            }\n        } \n\n    let statsToDisplay =  maxDateStat() \n\n        return(\n            <div className = 'stat-container'>\n                {this.context.posts ? <div className = \"stat one\"><FontAwesomeIcon icon=\"coffee\" />\n                <span className ='stat-title'>Last Moment</span> <span className ='stat-1'>{statsToDisplay}</span></div>: null }\n                {this.context.posts ? <div className = \"stat two\"><span className ='stat-title'>Moments</span><span className ='stat-2'> {posts.length}</span></div>: null }\n                <div className = \"stat-button\">\n                    <Link to = '/add-entry'>+</Link></div>\n                    \n            </div>\n             \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}