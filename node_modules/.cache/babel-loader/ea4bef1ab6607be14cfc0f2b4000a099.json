{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config';\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitUpdate = e => {\n      e.preventDefault();\n      let updatedEntry = {\n        content: this.bodyInput.current.value\n      };\n      fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(updatedEntry)\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(e => Promise.reject(e));\n        }\n\n        return res.json();\n      }).then(post => {\n        this.context.updatePost(post);\n        this.props.history.push('/dashboard');\n      }).catch(error => {\n        alert({\n          error\n        });\n      });\n    };\n\n    this.bodyInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    let getContent = this.context.posts.filter(post => post.id == this.props.match.params.id);\n    console.log(getContent[0].content);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"What Would you like to Change?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"body\",\n          id: \"body\",\n          ref: this.bodyInput,\n          defaultValue: getContent[0].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nEdit.defaultProps = {\n  history: {\n    goBack: () => {}\n  },\n  match: {\n    params: {}\n  }\n};\nEdit.contextType = journalContext;","map":{"version":3,"sources":["/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js"],"names":["React","Link","journalContext","config","Edit","Component","constructor","props","submitUpdate","e","preventDefault","updatedEntry","content","bodyInput","current","value","fetch","API_ENDPOINT","context","user_name","match","params","id","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","post","updatePost","history","push","catch","error","alert","createRef","state","render","getContent","posts","filter","console","log","defaultProps","goBack","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config'\n\nexport default class Edit extends React.Component {\n\n    static defaultProps = {\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = journalContext;\n\n    constructor(props){\n        super(props)\n        this.bodyInput = React.createRef();\n        this.state = {\n            error : null\n        }\n        \n    }\n\n    submitUpdate = (e) => {\n        e.preventDefault();\n\n        let updatedEntry = {\n            content: this.bodyInput.current.value\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`,  {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(updatedEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(post => {\n            this.context.updatePost(post)\n            this.props.history.push('/dashboard')\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    }\n\n    render(){\n\n        let getContent = this.context.posts.filter(post => \n            post.id == this.props.match.params.id)\n        \n        console.log(getContent[0].content)\n\n        return (\n            <div>\n            <form onSubmit = {this.submitUpdate}>\n                    <label>What Would you like to Change?</label>\n                    <input \n                        type=\"textarea\"\n                        name=\"body\"\n                        id=\"body\"\n                        ref={this.bodyInput} \n                        defaultValue = {getContent[0].content}\n\n                    />\n                    <button >Edit</button>\n            </form>\n            \n            </div>\n        )\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}