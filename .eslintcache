[{"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js":"1","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js":"2","/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js":"3","/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js":"4","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js":"5","/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js":"6","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js":"7","/Users/rockerbox/capstones/c2-client/mindful/src/App.js":"8","/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js":"9","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js":"10","/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js":"11","/Users/rockerbox/capstones/c2-client/mindful/src/config.js":"12","/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js":"13","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js":"14","/Users/rockerbox/capstones/c2-client/mindful/src/index.js":"15","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js":"16"},{"size":307,"mtime":1610555564640,"results":"17","hashOfConfig":"18"},{"size":2902,"mtime":1611933721314,"results":"19","hashOfConfig":"18"},{"size":4633,"mtime":1611873320051,"results":"20","hashOfConfig":"18"},{"size":3821,"mtime":1611846314605,"results":"21","hashOfConfig":"18"},{"size":2560,"mtime":1611863579617,"results":"22","hashOfConfig":"18"},{"size":3083,"mtime":1611872519169,"results":"23","hashOfConfig":"18"},{"size":2604,"mtime":1611864987638,"results":"24","hashOfConfig":"18"},{"size":2709,"mtime":1611872717366,"results":"25","hashOfConfig":"18"},{"size":1956,"mtime":1611787525251,"results":"26","hashOfConfig":"18"},{"size":1086,"mtime":1610120749017,"results":"27","hashOfConfig":"18"},{"size":2683,"mtime":1611768952553,"results":"28","hashOfConfig":"18"},{"size":105,"mtime":1611759610470,"results":"29","hashOfConfig":"18"},{"size":792,"mtime":1611864344784,"results":"30","hashOfConfig":"18"},{"size":428,"mtime":1611786992202,"results":"31","hashOfConfig":"18"},{"size":266,"mtime":1607005213422,"results":"32","hashOfConfig":"18"},{"size":550,"mtime":1610117904504,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ijt32k",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js",["73"],"/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js",["74"],"import React, { Component } from 'react'\nimport journalContext from '../journal-context'\nimport Mindful from '../MindfulMoment/mindful-store'\nimport config from '../config'\nimport { Link } from 'react-router-dom'\nimport TokenService from '../Auth-Service/token-services'\nimport './Form.css'\n\n//you can just use controlled inputs   \n\nclass Form extends Component {\n\n   \n    static contextType = journalContext\n\n    constructor(props) {\n        super(props)\n        this.titleInput = React.createRef();\n        this.bodyInput = React.createRef();       \n\n        this.state = {\n            title: '',\n            body: '',\n            error: null,\n            submitted: false,\n            clicked : false\n        }\n\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n \n    submitForm = (e) => {\n\n        e.preventDefault();\n        console.log('abc')\n        this.setState({\n            error: null,\n            submitted: true\n        })\n\n        let newEntry = {\n            title : this.titleInput.current.value,\n            content: this.bodyInput.current.value\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}`,  {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(newEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(post => {\n            this.context.addPost(post)\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    \n        \n\n    }\n\n    handleClick = () => {\n        \n        this.setState({\n            title: '',\n            body: '',\n            submitted: false\n        \n        })\n\n        this.titleInput = ''\n        this.bodyInput = ''\n    }\n\n\n\n    render() {\n\n        let max = 47;\n         \n        function getRandomInt(max) {\n            return Math.floor(Math.random() * Math.floor(max));\n          }\n        \n        let quote = Mindful[getRandomInt(max)]\n\n        let className='Pop-up';\n        if (this.state.submitted == true) {\n          className += ' Pop-up-active';\n        }\n\n        return (\n            <div className= 'Journal-container'>\n                <h2 className = \"Journal-form-title\">Add Today's Entry or <Link to = '/scream'>Scream and Release</Link></h2>\n                <form className = \"Journal-form\" onSubmit={this.submitForm}>\n                        <input \n                            placeholder=\"Enter title\"\n                            ref = {this.titleInput}\n                            type=\"text\"\n                            className = 'Entry-title'\n                            name=\"title\"\n                            id=\"title\"\n                            required\n                            />\n                        <textarea \n                            placeholder=\"What's up?\"\n                            ref = {this.bodyInput}\n                            type=\"textarea\"\n                            className = 'Entry-content'\n                            name=\"body\"\n                            id=\"body\"\n                            rows = \"18\" \n                            cols=\"70\"\n                            required\n                             />\n                        <button className = \"Journal-button\">Submit</button>\n\n                </form>\n                <div className = {className}> \n                    {this.state.submitted ? \n                    <div>\n                    <h3 className='Prompt-1'>Great job getting a Moment in!</h3>\n                    <button className='Pop-up-button' onClick = {this.handleClick}>x</button>\n                    <p>\"{quote}\"</p>\n                    </div> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;","/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js",[],["75","76"],"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js",["77","78"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport TokenService from '../Auth-Service/token-services';\n\nexport default class Edit extends React.Component {\n\n    static defaultProps = {\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = journalContext;\n\n    constructor(props){\n        super(props)\n        this.bodyInput = React.createRef();\n        this.state = {\n            error : null\n        }\n        \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    submitUpdate = (e) => {\n        e.preventDefault();\n\n        let updatedEntry = {\n            content: this.bodyInput.current.value\n\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`,  {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(updatedEntry),\n        })\n        .then(res => {\n            console.log('hel')\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res\n        })\n        .then(() => {\n            this.context.updatePost({id:this.props.match.params.id, content: this.bodyInput.current.value})\n            console.log('hello')\n            console.log(this.props.history)\n            this.props.history.push('/dashboard')\n\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    }\n\n    render(){\n\n        let getContent = this.context.posts.filter(post => \n            post.id == this.props.match.params.id)\n        \n        console.log(getContent[0].content)\n\n        return (\n            <div>\n            <form onSubmit = {this.submitUpdate}>\n                    <label>What Would you like to Change?</label>\n                    <input \n                        type=\"textarea\"\n                        name=\"body\"\n                        id=\"body\"\n                        ref={this.bodyInput} \n                        defaultValue = {getContent[0].content}\n\n                    />\n                    <button >Edit</button>\n            </form>\n            \n            </div>\n        )\n\n  }\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js",["79","80","81","82"],"import React from 'react'\nimport Edit from '../Edit-Form/Edit'\nimport {Link} from 'react-router-dom'\nimport journalContext from '../journal-context'\nimport moment from 'moment';\nimport Entry from './Entry'\n//import Edit from '../Edit-Form/Edit'\nimport TokenService from '../Auth-Service/token-services'\nimport config from '../config'\n\n\n\nclass Posts extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    handleDeleteNote = id => {\n        this.props.history.push(`/dashboard`)\n    };\n  \n\n    render(){\n\n        const date = this.context.currentDateSelection\n        const formattedDate = moment(date).format('MM/DD/YYYY');\n     \n\n        let filteredEntries = this.context.posts.filter( (posts , i) => \n        formattedDate == moment(this.context.posts[i].modified).format('MM/DD/YYYY'))\n            console.log(filteredEntries)\n\n\n        const entries = filteredEntries.map((posts ,i) => {\n\n            return (    \n                <ul className= \"Entry-single\">\n                    \n                        <li key={filteredEntries[i].id}>\n                            <Entry\n                                history = {this.props.history}\n                                id={filteredEntries[i].id}\n                                title={filteredEntries[i].title}\n                                content={filteredEntries[i].content}\n                                onDeleteNote={this.handleDeleteNote}/>\n                        </li>\n                    \n                </ul>\n             \n            )\n        })\n\n        return(\n         <div>\n\n            <h2 className='Entry-all-title'>{formattedDate}</h2>\n            <div>{entries}</div>\n         </div>   \n         \n         \n        )\n    }\n}\n\n\n\n\n\n export default Posts\n\n\n{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}\n","/Users/rockerbox/capstones/c2-client/mindful/src/App.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js",["83","84"],"import React from 'react';\nimport { Link } from 'react-router-dom'\n\n\nexport default class Scream extends React.Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            body: '',\n            clicked: false\n        }\n\n    }\n\n    handleChange = event => {\n        const {name, value } = event.target \n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleRelease = (e) => {\n\n        e.preventDefault();\n        this.setState(\n            {body: '',\n            clicked : true\n        })\n\n\n    }\n    \n\n    render(){\n        const { body } = this.state;\n\n        return(\n            <div>\n                {this.state.clicked == false ?\n                <div>\n                <p>Use this to toss off the words you’d otherwise tweet, write in your journal, or leave unarticulated and bottled up deep inside the folds of your brain\n                    Type in your feelings, hit the “release\" button, and watch your words disappear into the digital abyss. \n                </p>\n                <br/>\n                <p>This is a safe space - no one can see you or hear you in here.</p>\n                \n                <form onSubmit = {this.handleRelease}>\n                <textarea onChange={this.handleChange} name=\"body\" id=\"body\" value={body} rows=\"20\" cols=\"100\" required>\n                </textarea>\n                <button>Release</button>\n                </form>\n                <Link to = '/dashboard'>Back</Link> \n                </div>\n                  : null                  \n                }\n                   {this.state.clicked ? \n                    <div>\n                    <img src = \"https://media1.tenor.com/images/a1b6c954f41993410e4e2bf015e13fed/tenor.gif?itemid=4674557\"/> \n                    <button>\n                     <Link to = '/dashboard'>Back</Link> \n                    </button>\n                    </div>: null}\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js",["85"],"import React from 'react'\n\n import AuthApiService from '../Auth-Service/api-auth-service'\n\n\nexport default class SignUp extends React.Component {\n\n    static defaultProps = {\n        onValidlRegistration: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            username: '',\n            password: '',\n            full_name:'',\n            error: null\n          \n        };\n    };\n\n\n\n        // handle registration submission (POST new users). //\n        submitRegistration = e => {\n            e.preventDefault();\n            const {user_name, password, first_name, last_name} = e.target; \n    \n            this.setState({\n                error: null\n            });\n    \n            AuthApiService.postUser({\n                user_name: user_name.value,\n                password: password.value,\n                first_name: first_name.value,\n                last_name: last_name.value\n\n            })\n                .then(user => {\n                    user_name.value = '';\n                    password.value = '';\n                    first_name.value = '';\n                    last_name.value = '';\n                    this.props.onValidlRegistration();\n                })\n                .then(() => {\n                    window.location=`/`;\n                    window.alert('Registered successfully. Please log in with your new credentials.');\n                })\n                .catch(res => {\n                    this.setState({\n                        error: window.alert('An unexpected error occurred. Please try again later.')\n                    });\n                });\n        }    \n\n    render(){\n\n        return(\n            <div className = \"sign-up\">\n                <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n                <div className=\"sign-up-triangle\"></div>\n                <h2 className=\"login-header\">You otter relax...</h2>\n                <form onSubmit = {this.submitRegistration} className=\"login-container\">\n                    <p><input type=\"firstname\" placeholder=\"First Name\" name= 'first_name' id= 'first_name' className = 'first_name'/></p>\n                    <p><input type=\"lastname\" placeholder=\"Last Name\" name= 'last_name' id= 'last_name' className = 'last_name'/></p>\n                    <p><input type=\"username\" placeholder=\"Username\" name= 'user_name' id= 'user_name' className = 'user_name'/></p>\n                    <p><input type=\"password\" placeholder=\"Password\" name= 'password' id= 'password' className = 'password'/></p>\n                    <button className = 'sign-up-button'>Sign Up</button>\n                </form>\n            </div>\n\n\n        )\n    }\n\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/config.js",["86"],"/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js",["87","88"],"  \nimport React, { useContext, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport './Calendar.css'\nimport getEntriesByDate from '../helper-funcs'\nimport journalContext from \"../journal-context\";\nimport 'react-calendar/dist/Calendar.css';\n\n\n\n\n   \n function ReactCalendar(){\n\n  const context = useContext(journalContext)\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n    context.updateCurrentDate(date)\n\n  }\n\n  return (\n    <div>\n      <img className = 'sun-ray' src=\"https://media3.giphy.com/media/JpMnkVV9s3ILRYYHnq/giphy.gif\" height='70' width='130'/>\n      <Calendar  className = \"calendar-table\" onChange = {onChange} value = {date} maxDate= {new Date()}/>     \n    </div>\n  )\n   \n }\n\n\n\n\n\nexport default ReactCalendar;","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/index.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js",[],{"ruleId":"89","severity":1,"message":"90","line":89,"column":13,"nodeType":"91","endLine":89,"endColumn":79},{"ruleId":"92","severity":1,"message":"93","line":127,"column":34,"nodeType":"94","messageId":"95","endLine":127,"endColumn":36},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":97,"column":21,"nodeType":"94","messageId":"95","endLine":97,"endColumn":23},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":58,"column":23,"nodeType":"94","messageId":"95","endLine":58,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":100,"column":1,"nodeType":"107","messageId":"108","endLine":100,"endColumn":88},{"ruleId":"92","severity":1,"message":"93","line":42,"column":37,"nodeType":"94","messageId":"95","endLine":42,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":61,"column":21,"nodeType":"91","endLine":61,"endColumn":125},{"ruleId":"89","severity":1,"message":"90","line":64,"column":17,"nodeType":"91","endLine":64,"endColumn":83},{"ruleId":"109","severity":1,"message":"110","line":2,"column":1,"nodeType":"111","endLine":5,"endColumn":2},{"ruleId":"100","severity":1,"message":"112","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":26,"column":7,"nodeType":"91","endLine":26,"endColumn":125},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Edit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getEntriesByDate' is defined but never used.","no-global-assign","no-unsafe-negation"]