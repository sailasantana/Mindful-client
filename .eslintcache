[{"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js":"1","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js":"2","/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js":"3","/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js":"4","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js":"5","/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js":"6","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js":"7","/Users/rockerbox/capstones/c2-client/mindful/src/App.js":"8","/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js":"9","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js":"10","/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js":"11","/Users/rockerbox/capstones/c2-client/mindful/src/config.js":"12","/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js":"13","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js":"14","/Users/rockerbox/capstones/c2-client/mindful/src/index.js":"15","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js":"16","/Users/rockerbox/capstones/c2-client/mindful/src/helper-funcs.js":"17","/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js":"18"},{"size":353,"mtime":1611942168354,"results":"19","hashOfConfig":"20"},{"size":2390,"mtime":1612386312510,"results":"21","hashOfConfig":"20"},{"size":4733,"mtime":1613347188996,"results":"22","hashOfConfig":"20"},{"size":3821,"mtime":1611846314605,"results":"23","hashOfConfig":"20"},{"size":2533,"mtime":1612409246077,"results":"24","hashOfConfig":"20"},{"size":3244,"mtime":1613313413767,"results":"25","hashOfConfig":"20"},{"size":3012,"mtime":1613310149965,"results":"26","hashOfConfig":"20"},{"size":3603,"mtime":1613313427255,"results":"27","hashOfConfig":"20"},{"size":2332,"mtime":1612721318253,"results":"28","hashOfConfig":"20"},{"size":1086,"mtime":1610120749017,"results":"29","hashOfConfig":"20"},{"size":2738,"mtime":1613071309076,"results":"30","hashOfConfig":"20"},{"size":128,"mtime":1612984174627,"results":"31","hashOfConfig":"20"},{"size":1431,"mtime":1613079137710,"results":"32","hashOfConfig":"20"},{"size":428,"mtime":1611786992202,"results":"33","hashOfConfig":"20"},{"size":266,"mtime":1607005213422,"results":"34","hashOfConfig":"20"},{"size":550,"mtime":1610117904504,"results":"35","hashOfConfig":"20"},{"size":225,"mtime":1612388793060,"results":"36","hashOfConfig":"20"},{"size":2569,"mtime":1613081575681,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ijt32k",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js",[],["86","87"],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js",["88","89"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport './LoginSignUp.css'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n\n\n   //handle login auth and validation upon form submission and \n   //get user's entries + set them into context\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n           localStorage.setItem( 'user_name', this.userInput.current.value );       \n           this.context.setUserName(this.userInput.current.value) \n           TokenService.saveAuthToken(res.token);\n           this.props.onvalidLogin();\n           \n       })\n       .then(() => {\n           this.props.history.push('/dashboard') \n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return (\n            <div class=\"login\">   \n            <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n              <div className=\"login-triangle\"></div>\n              <h2 className=\"login-header\">Log in to continue</h2>\n              <form className=\"login-container\"  onSubmit = {this.handleJwtLoginAuth}>\n                <p><input type=\"username\" ref={this.userInput} placeholder=\"Username\"/></p>\n                <p><input type=\"password\" ref={this.passInput} placeholder=\"Password\"/></p>\n                <button type=\"submit\" value=\"Log in\" className='login-button'>Log In</button>\n              </form>\n             <p className= 'Sign-up-prompt'><Link to ='./sign-up'>New User? Sign Up here!</Link></p> \n            </div>)\n    }\n\n\n}",["90","91"],"/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js",["92"],"/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js",["93","94"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config';\nimport TokenService from '../Auth-Service/token-services';\nimport './Edit.css';\nimport Logout from '../Login/Logout';\n\nexport default class Edit extends React.Component {\n\n    static defaultProps = {\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = journalContext;\n\n    constructor(props){\n        super(props)\n        this.bodyInput = React.createRef();\n        this.state = {\n            error : null\n        }\n        \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    submitUpdate = (e) => {\n        e.preventDefault();\n\n        let updatedEntry = {\n            content: this.bodyInput.current.value\n\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`,  {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(updatedEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res\n        })\n        .then(() => {\n            this.context.updatePost({id:this.props.match.params.id, content: this.bodyInput.current.value})\n            this.props.history.push('/dashboard')\n\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    }\n\n    render(){\n\n        let getContent = this.context.posts.filter(post =>  post.id == this.props.match.params.id)\n        \n        return (\n            <div className= 'Journal-container'>\n             <Logout />   \n             <h2 className = \"Edit-label\">What Would you like to Change?</h2>\n            <form className = \"Journal-form\" onSubmit = {this.submitUpdate}>\n                    <textarea \n                        type=\"textarea\"\n                        name=\"body\"\n                        id=\"body\"\n                        ref={this.bodyInput} \n                        defaultValue = {getContent[0].content}\n                        className = 'Entry-content'\n                        rows = \"23\" \n                        cols=\"70\"                        \n\n                    />\n                    <button className='Edit-button' >Edit</button>\n            </form>      \n            </div>\n        )\n\n   }\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js",["95","96","97","98"],"import React from 'react'\nimport Edit from '../Edit-Form/Edit'\nimport {Link} from 'react-router-dom'\nimport journalContext from '../journal-context'\nimport moment from 'moment';\nimport Entry from './Entry'\n//import Edit from '../Edit-Form/Edit'\nimport TokenService from '../Auth-Service/token-services'\nimport config from '../config'\nimport Stats from '../Stats/stats'\nimport ReactCalendar from '../Calendar/Calendar'\nimport LogOut from '../Login/Logout'\n\n\n\nclass Posts extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    handleDeleteNote = id => {\n        this.props.history.push(`/dashboard`)\n    };\n  \n\n    render(){\n\n        const date = this.context.currentDateSelection\n        const formattedDate = moment(date).format('MM/DD/YYYY');\n     \n        console.log(this.context.posts)\n        console.log(formattedDate,typeof(formattedDate))\n        let filteredEntries = this.context.posts.filter( (posts , i) => \n        formattedDate == moment(this.context.posts[i].date_modified).format('MM/DD/YYYY'))\n        console.log(filteredEntries)\n\n\n\n\n\n        const entries = filteredEntries.map((posts ,i) => {\n\n            return (    \n                <ul className= \"Entry-single\">\n                    \n                        <li key={filteredEntries[i].id}>\n                            <Entry\n                                history = {this.props.history}\n                                id={filteredEntries[i].id}\n                                title={filteredEntries[i].title}\n                                content={filteredEntries[i].content}\n                                onDeleteNote={this.handleDeleteNote}/>\n                        </li>\n                    \n                </ul>\n             \n            )\n        })\n\n        return(\n         <div className = \"Entries-container\">  \n         <LogOut />    \n         <ReactCalendar /> \n         <Stats />    \n         {this.context.clicked && filteredEntries ?\n         <div>\n            <h2 className='Entry-all-title'>{formattedDate}</h2>\n            <div>{entries}</div>\n         </div> \n         : null}\n         </div> \n        )\n    }\n}\n\n\n\n\n\n export default Posts\n\n\n{/* <h2>{{filteredEntries} ? `Your Entries : {formattedDate}` : `No Entries`}</h2>  */}\n","/Users/rockerbox/capstones/c2-client/mindful/src/App.js",["99","100","101"],"/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js",["102","103"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './scream.css';\n\n\nexport default class Scream extends React.Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            body: '',\n            clicked: false\n        }\n\n    }\n\n    handleChange = event => {\n        const {name, value } = event.target \n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleRelease = (e) => {\n\n        e.preventDefault();\n        this.setState(\n            {body: '',\n            clicked : true\n        })\n\n\n\n    }\n    \n\n    render(){\n        const { body } = this.state;\n\n        return(\n            <div className = \"Scream-containter\">\n                {this.state.clicked == false ?\n                <div>\n                <div className = \"Scream-prompt\">    \n                <p>Use this to toss off the words you’d otherwise tweet, write in your journal, or leave unarticulated and bottled up deep inside the folds of your brain\n                    Type in your feelings, hit the “release\" button, and watch your words disappear into the digital abyss. \n                </p>\n                <br/>\n                <p>These moments will go unrecorded so that you never have to come back to them again.\n                    No one can see you or hear you in here.\n                </p>\n                </div>\n                \n                <form onSubmit = {this.handleRelease}>\n                <textarea \n                className = 'Scream-space' \n                onChange={this.handleChange} \n                name=\"body\" id=\"body\" \n                value={body} \n                rows=\"10\" \n                cols=\"100\" \n                placeholder=\"What ails you?\"\n                >\n                </textarea>\n                <button className = \"Scream-button\">Release</button>\n                </form>\n                </div>\n                  : null                  \n                }\n                   {this.state.clicked ? \n                    <div>\n                    <img className = 'Poof-animation' src = \"https://media0.giphy.com/media/xUA7bcJspBQvTfOne0/giphy.gif\"/> \n                    <Link className = \"Scream-button second\" to = '/dashboard'>Back To Dashboard</Link>\n                    </div>: null}\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js",["104"],"import React from 'react'\n\n import AuthApiService from '../Auth-Service/api-auth-service'\n\n\nexport default class SignUp extends React.Component {\n\n    static defaultProps = {\n        onValidlRegistration: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            username: '',\n            password: '',\n            full_name:'',\n            error: null\n          \n        };\n    };\n\n\n\n        // handle registration submission (POST new users). //\n        submitRegistration = e => {\n            e.preventDefault();\n            const {user_name, password, first_name, last_name} = e.target; \n    \n            this.setState({\n                error: null\n            });\n    \n            AuthApiService.postUser({\n                user_name: user_name.value,\n                password: password.value,\n                first_name: first_name.value,\n                last_name: last_name.value\n\n            })\n                .then(user => {\n                    user_name.value = '';\n                    password.value = '';\n                    first_name.value = '';\n                    last_name.value = '';\n                    this.props.onValidlRegistration();\n                })\n                .then(() => {\n                    window.location=`/`;\n                    window.alert('Registered successfully. Please log in with your new credentials.');\n                })\n                .catch(err => {\n                    this.setState({\n                        error: err.error\n                    });\n                });\n        }    \n\n    render(){\n\n        return(\n            <div className = \"sign-up\">\n                <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n                <div className=\"sign-up-triangle\"></div>\n                <h2 className=\"login-header\">You otter relax...</h2>\n                <form onSubmit = {this.submitRegistration} className=\"login-container\">\n                    <p><input type=\"firstname\" placeholder=\"First Name\" name= 'first_name' id= 'first_name' className = 'first_name'/></p>\n                    <p><input type=\"lastname\" placeholder=\"Last Name\" name= 'last_name' id= 'last_name' className = 'last_name'/></p>\n                    <p><input type=\"username\" placeholder=\"Username\" name= 'user_name' id= 'user_name' className = 'user_name'/></p>\n                    <p><input type=\"password\" placeholder=\"Password\" name= 'password' id= 'password' className = 'password'/></p>\n                    <button className = 'sign-up-button'>Sign Up</button>\n                </form>\n                {this.state.error ?\n                    <div>{this.state.error}</div> : null\n                    }\n            </div>\n\n\n        )\n    }\n\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/config.js",["105"],"\nexport default {\n    API_ENDPOINT: 'https://fathomless-inlet-77055.herokuapp.com',\n    TOKEN_KEY: 'mindful-client-auth-token'\n}",["106","107"],"/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js",["108","109"],"  \nimport React, { useContext, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport './Calendar.css';\nimport journalContext from \"../journal-context\";\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\n\n\n   \n function ReactCalendar(){\n\n  const context = useContext(journalContext)\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n    context.updateCurrentDate(date)\n    context.setClicked(true)\n\n  }\n\n  \n \n  let posts = context.posts \n\n  let allDates = () => {\n\n      let array = [];\n      \n      if(!posts){\n          return;\n      }       \n      else {\n\n        posts.map( (posts , i) => {\n            let formattedDate = moment(context.posts[i].date_modified).format('MM/DD/YYYY')\n             array.push(formattedDate)\n             return;\n\n          })\n         return array;  \n    } \n  }       \n\n\n\n  const customTile = ({ activeStartDate, date, view,i }) => \n  view === 'month' && allDates().includes(moment(date).format('MM/DD/YYYY'))  ? <img src=\"https://media4.giphy.com/media/Kg9JwOFEyoK75CzQSK/source.gif\" width=\"23\" height=\"17\"/> : null\n\n  return (\n    <div>\n      <h2 className = \"welcome-message\">Welcome Back @{context.user_name}!</h2>\n      <Calendar  className = \"calendar-table\" onChange = {onChange} value = {date} maxDate= {new Date()} tileContent={customTile}/>     \n    </div>\n  )\n   \n }\n\n\n\n\n\nexport default ReactCalendar;","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js",[],["110","111"],"/Users/rockerbox/capstones/c2-client/mindful/src/index.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/helper-funcs.js",["112"],"\nexport const getEntriesByDate = (posts, date) => {\n \n    return(\n        posts.filter(post => post.date_created == date)\n    )\n    \n}\n\nexport const getNumberofEntries = (posts) => {\n\n    return (\n        posts.length\n    )\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js",["113","114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":69,"column":13,"nodeType":"126","endLine":69,"endColumn":79},{"ruleId":"116","replacedBy":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":129,"column":34,"nodeType":"131","messageId":"132","endLine":129,"endColumn":36},{"ruleId":"120","severity":1,"message":"133","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":95,"column":69,"nodeType":"131","messageId":"132","endLine":95,"endColumn":71},{"ruleId":"120","severity":1,"message":"134","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"133","line":3,"column":9,"nodeType":"122","messageId":"123","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":62,"column":23,"nodeType":"131","messageId":"132","endLine":62,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":111,"column":1,"nodeType":"137","messageId":"138","endLine":111,"endColumn":88},{"ruleId":"120","severity":1,"message":"139","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"120","severity":1,"message":"140","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":14},{"ruleId":"120","severity":1,"message":"141","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":44,"column":37,"nodeType":"131","messageId":"132","endLine":44,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":74,"column":21,"nodeType":"126","endLine":74,"endColumn":124},{"ruleId":"124","severity":1,"message":"125","line":64,"column":17,"nodeType":"126","endLine":64,"endColumn":83},{"ruleId":"142","severity":1,"message":"143","line":2,"column":1,"nodeType":"144","endLine":5,"endColumn":2},{"ruleId":"116","replacedBy":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":39,"column":14,"nodeType":"149","messageId":"150","endLine":39,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":49,"column":81,"nodeType":"126","endLine":49,"endColumn":177},{"ruleId":"116","replacedBy":"151"},{"ruleId":"118","replacedBy":"152"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":48,"nodeType":"131","messageId":"132","endLine":5,"endColumn":50},{"ruleId":"120","severity":1,"message":"153","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":57,"column":25,"nodeType":"131","messageId":"132","endLine":57,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":65,"column":16,"nodeType":"149","messageId":"150","endLine":65,"endColumn":23},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["154"],["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Edit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ReactCalendar' is defined but never used.","'Logout' is defined but never used.","'Stats' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["154"],["155"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["154"],["155"],"'getNumberofEntries' is defined but never used.","no-global-assign","no-unsafe-negation"]