[{"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js":"1","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js":"2","/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js":"3","/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js":"4","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js":"5","/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js":"6","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js":"7","/Users/rockerbox/capstones/c2-client/mindful/src/App.js":"8","/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js":"9","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js":"10","/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js":"11"},{"size":307,"mtime":1610555564640,"results":"12","hashOfConfig":"13"},{"size":3109,"mtime":1611687029502,"results":"14","hashOfConfig":"13"},{"size":4114,"mtime":1611684955656,"results":"15","hashOfConfig":"13"},{"size":3948,"mtime":1611592556301,"results":"16","hashOfConfig":"13"},{"size":2586,"mtime":1611687008568,"results":"17","hashOfConfig":"13"},{"size":2902,"mtime":1611686987961,"results":"18","hashOfConfig":"13"},{"size":2565,"mtime":1611695969971,"results":"19","hashOfConfig":"13"},{"size":2846,"mtime":1611695697698,"results":"20","hashOfConfig":"13"},{"size":1956,"mtime":1611593689437,"results":"21","hashOfConfig":"13"},{"size":1086,"mtime":1610120749017,"results":"22","hashOfConfig":"13"},{"size":2420,"mtime":1610144471926,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ijt32k",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js",["50"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport './LoginSignUp.css'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n   \n\n   //handle login auth and validation upon form submission and \n   //get user's entries + set them into context\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n\n           this.context.setUserName(this.userInput.current.value)        \n           TokenService.saveAuthToken(res.token);\n           this.props.onvalidLogin();\n\n           console.log(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`)\n            fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}`, {\n                headers: {\n                  'session_token':`${TokenService.getAuthToken()}`\n                }\n              })\n              .then(res => {\n                if(!res.ok){\n                  return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n              })\n\n              .then(posts => {\n                  console.log(posts)\n                this.context.updatePostsInState(posts)\n              })\n              .catch(error => {\n                alert({error})\n              })\n           \n       })\n       .then(() => {\n           console.log(this.props)\n           this.props.history.push('/dashboard') \n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return (\n            <div>\n                <h2 className ='login'>Login or Sign Up to Continue</h2>\n                <img className = 'giphy' src=\"https://media1.giphy.com/media/Ma0gyrI1K0jSHoY8cZ/giphy.gif\" width=\"340\" height=\"270\"/>\n                <form onSubmit = {this.handleJwtLoginAuth}>\n                    <label>Username</label>\n                    < input  ref={this.userInput} type = 'text' id=\"return_user\" name=\"return_user\" />\n                    <label>Password</label>\n                    <input  ref={this.passInput}  type=\"password\" id=\"return_pass\" name=\"return_pass\" />\n                    <button type='submit' >\n                    Login\n                </button>\n                <Link to ='./sign-up'>New User? Sign Up here!</Link>\n                </form>\n            </div> )\n    }\n\n\n}",["51","52"],"/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js",["53","54"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport TokenService from '../Auth-Service/token-services';\n\nexport default class Edit extends React.Component {\n\n    static defaultProps = {\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = journalContext;\n\n    constructor(props){\n        super(props)\n        this.bodyInput = React.createRef();\n        this.state = {\n            error : null\n        }\n        \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n    submitUpdate = (e) => {\n        e.preventDefault();\n\n        let updatedEntry = {\n            content: this.bodyInput.current.value\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/${this.props.match.params.id}`,  {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(updatedEntry),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(post => {\n            this.context.updatePost(post)\n            console.log(this.props)\n        })\n        .catch(error => {\n            alert({error})\n        })\n\n    }\n\n    render(){\n\n        let getContent = this.context.posts.filter(post => \n            post.id == this.props.match.params.id)\n        \n        console.log(getContent[0].content)\n\n        return (\n            <div>\n            <form onSubmit = {this.submitUpdate}>\n                    <label>What Would you like to Change?</label>\n                    <input \n                        type=\"textarea\"\n                        name=\"body\"\n                        id=\"body\"\n                        ref={this.bodyInput} \n                        defaultValue = {getContent[0].content}\n\n                    />\n                    <button >Edit</button>\n            </form>\n            \n            </div>\n        )\n\n  }\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js",["55","56","57","58"],"/Users/rockerbox/capstones/c2-client/mindful/src/App.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js",["59","60"],"import React from 'react';\nimport { Link } from 'react-router-dom'\n\n\nexport default class Scream extends React.Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            body: '',\n            clicked: false\n        }\n\n    }\n\n    handleChange = event => {\n        const {name, value } = event.target \n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleRelease = (e) => {\n\n        e.preventDefault();\n        this.setState(\n            {body: '',\n            clicked : true\n        })\n\n\n    }\n    \n\n    render(){\n        const { body } = this.state;\n\n        return(\n            <div>\n                {this.state.clicked == false ?\n                <div>\n                <p>Use this to toss off the words you’d otherwise tweet, write in your journal, or leave unarticulated and bottled up deep inside the folds of your brain\n                    Type in your feelings, hit the “release\" button, and watch your words disappear into the digital abyss. \n                </p>\n                <br/>\n                <p>This is a safe space - no one can see you or hear you in here.</p>\n                \n                <form onSubmit = {this.handleRelease}>\n                <textarea onChange={this.handleChange} name=\"body\" id=\"body\" value={body} rows=\"20\" cols=\"100\" required>\n                </textarea>\n                <button>Release</button>\n                </form>\n                <Link to = '/dashboard'>Back</Link> \n                </div>\n                  : null                  \n                }\n                   {this.state.clicked ? \n                    <div>\n                    <img src = \"https://media1.tenor.com/images/a1b6c954f41993410e4e2bf015e13fed/tenor.gif?itemid=4674557\"/> \n                    <button>\n                     <Link to = '/dashboard'>Back</Link> \n                    </button>\n                    </div>: null}\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js",[],{"ruleId":"61","severity":1,"message":"62","line":92,"column":17,"nodeType":"63","endLine":92,"endColumn":134},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":92,"column":21,"nodeType":"74","messageId":"75","endLine":92,"endColumn":23},{"ruleId":"68","severity":1,"message":"76","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":3,"column":9,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":58,"column":23,"nodeType":"74","messageId":"75","endLine":58,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":100,"column":1,"nodeType":"79","messageId":"80","endLine":100,"endColumn":88},{"ruleId":"72","severity":1,"message":"73","line":42,"column":37,"nodeType":"74","messageId":"75","endLine":42,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":61,"column":21,"nodeType":"63","endLine":61,"endColumn":125},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Edit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]