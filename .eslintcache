[{"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js":"1","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js":"2","/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js":"3","/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js":"4","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js":"5","/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js":"6","/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js":"7","/Users/rockerbox/capstones/c2-client/mindful/src/App.js":"8","/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js":"9","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js":"10","/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js":"11","/Users/rockerbox/capstones/c2-client/mindful/src/config.js":"12","/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js":"13","/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js":"14","/Users/rockerbox/capstones/c2-client/mindful/src/index.js":"15","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js":"16","/Users/rockerbox/capstones/c2-client/mindful/src/helper-funcs.js":"17","/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js":"18"},{"size":383,"mtime":1613607066771,"results":"19","hashOfConfig":"20"},{"size":2688,"mtime":1613607386305,"results":"21","hashOfConfig":"20"},{"size":4771,"mtime":1613517535266,"results":"22","hashOfConfig":"20"},{"size":3821,"mtime":1611846314605,"results":"23","hashOfConfig":"20"},{"size":2578,"mtime":1613585383728,"results":"24","hashOfConfig":"20"},{"size":3196,"mtime":1613517500747,"results":"25","hashOfConfig":"20"},{"size":3049,"mtime":1613585775630,"results":"26","hashOfConfig":"20"},{"size":3983,"mtime":1613607735185,"results":"27","hashOfConfig":"20"},{"size":2332,"mtime":1612721318253,"results":"28","hashOfConfig":"20"},{"size":1086,"mtime":1610120749017,"results":"29","hashOfConfig":"20"},{"size":2738,"mtime":1613086459701,"results":"30","hashOfConfig":"20"},{"size":128,"mtime":1612984174627,"results":"31","hashOfConfig":"20"},{"size":1406,"mtime":1613592300830,"results":"32","hashOfConfig":"20"},{"size":496,"mtime":1613581495095,"results":"33","hashOfConfig":"20"},{"size":266,"mtime":1607005213422,"results":"34","hashOfConfig":"20"},{"size":550,"mtime":1610117904504,"results":"35","hashOfConfig":"20"},{"size":225,"mtime":1612388793060,"results":"36","hashOfConfig":"20"},{"size":2554,"mtime":1613594711074,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ijt32k",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/Users/rockerbox/capstones/c2-client/mindful/src/journal-context.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Login.js",["82","83"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../Auth-Service/api-auth-service';\nimport TokenService from '../Auth-Service/token-services';\nimport journalContext from '../journal-context';\nimport config from '../config'\nimport './LoginSignUp.css'\n\n\nexport default class LoginPage extends React.Component {\n\n   static defaultProps = {\n       onvalidLogin: () => {}\n   }; \n\n   static contextType = journalContext;\n\n   constructor(props){\n       super(props);\n       this.userInput = React.createRef();\n       this.passInput = React.createRef();\n\n\n       this.state  = {\n           error : null,\n           posts : []\n    };\n   }\n\n\n\n   //handle login auth and validation upon form submission and \n   //get user's entries + set them into context\n   handleJwtLoginAuth = e => {\n       e.preventDefault();\n       this.setState({\n           error: null\n       });\n\n       AuthApiService.postLogin({\n           user_name:this.userInput.current.value,\n           password : this.passInput.current.value\n        \n       })\n       .then(res => {\n           localStorage.setItem( 'user_name', this.userInput.current.value );       \n           this.context.setUserName(this.userInput.current.value) \n           TokenService.saveAuthToken(res.token);\n           this.props.onvalidLogin();\n\n\n           \n       })\n       .then(() => {\n           this.context.setPostsforStats()\n           this.props.history.push('/dashboard') \n       })\n       .catch(res => {\n           this.setState({\n               error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n           })\n       })\n\n   }\n\n  \n\n    render(){\n\n        return (\n            <div className=\"login\">   \n            <img className = \"logo\" src=\"/logo.png\" width=\"210\" height=\"180\"/>\n              <p className = \"about-app\">Mindfulness Through Daily Journaling</p>\n              <div className=\"login-triangle\"></div>\n              <h2 className=\"login-header\">Log in to continue</h2>\n              <form className=\"login-container\"  onSubmit = {this.handleJwtLoginAuth}>\n                <p><input type=\"username\" ref={this.userInput} placeholder=\"Username\"/></p>\n                <p><input type=\"password\" ref={this.passInput} placeholder=\"Password\"/></p>\n                <button type=\"submit\" value=\"Log in\" className='login-button'>Log In</button>\n              </form>\n             <p className= \"Sign-up-prompt\"><Link to ='./sign-up'>New User? Sign Up here!</Link></p> \n             <div className = \"demo-container\">\n             <div>Demo Username: Thinkful</div>\n             <div>Demo Password: @Thinkful1!</div>\n             </div>\n            </div>)\n    }\n\n\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Form/Form.js",["84"],"/Users/rockerbox/capstones/c2-client/mindful/src/MindfulMoment/mindful-store.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entry.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Edit-Form/Edit.js",["85","86"],"/Users/rockerbox/capstones/c2-client/mindful/src/Entries/Entries.js",["87","88","89","90"],"/Users/rockerbox/capstones/c2-client/mindful/src/App.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Scream/scream.js",["91","92"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './scream.css';\n\n\nexport default class Scream extends React.Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            body: '',\n            clicked: false\n        }\n\n    }\n\n    handleChange = event => {\n        const {name, value } = event.target \n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleRelease = (e) => {\n\n        e.preventDefault();\n        this.setState(\n            {body: '',\n            clicked : true\n        })\n\n\n\n    }\n    \n\n    render(){\n        const { body } = this.state;\n\n        return(\n            <div className = \"Scream-containter\">\n                {this.state.clicked == false ?\n                <div>\n                <div className = \"Scream-prompt\">    \n                <p>Use this to toss off the words you’d otherwise tweet, write in your journal, or leave unarticulated and bottled up deep inside the folds of your brain\n                    Type in your feelings, hit the “release\" button, and watch your words disappear into the digital abyss. \n                </p>\n                <br/>\n                <p>These moments will go unrecorded so that you never have to come back to them again.\n                    No one can see you or hear you in here.\n                </p>\n                </div>\n                \n                <form onSubmit = {this.handleRelease}>\n                <textarea \n                className = 'Scream-space' \n                onChange={this.handleChange} \n                name=\"body\" id=\"body\" \n                value={body} \n                rows=\"10\" \n                cols=\"100\" \n                placeholder=\"What ails you?\"\n                >\n                </textarea>\n                <button className = \"Scream-button\">Release</button>\n                </form>\n                </div>\n                  : null                  \n                }\n                   {this.state.clicked ? \n                    <div>\n                    <img className = 'Poof-animation' src = \"https://media0.giphy.com/media/xUA7bcJspBQvTfOne0/giphy.gif\"/> \n                    <Link className = \"Scream-button second\" to = '/dashboard'>Back To Dashboard</Link>\n                    </div>: null}\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/api-auth-service.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/SignUp.js",["93"],"/Users/rockerbox/capstones/c2-client/mindful/src/config.js",["94"],"\nexport default {\n    API_ENDPOINT: 'https://fathomless-inlet-77055.herokuapp.com',\n    TOKEN_KEY: 'mindful-client-auth-token'\n}",["95","96"],"/Users/rockerbox/capstones/c2-client/mindful/src/Calendar/Calendar.js",["97","98"],"/Users/rockerbox/capstones/c2-client/mindful/src/Login/Logout.js",[],"/Users/rockerbox/capstones/c2-client/mindful/src/index.js",[],["99","100"],"/Users/rockerbox/capstones/c2-client/mindful/src/Auth-Service/token-services.js",[],["101","102"],"/Users/rockerbox/capstones/c2-client/mindful/src/helper-funcs.js",["103"],"\nexport const getEntriesByDate = (posts, date) => {\n \n    return(\n        posts.filter(post => post.date_created == date)\n    )\n    \n}\n\nexport const getNumberofEntries = (posts) => {\n\n    return (\n        posts.length\n    )\n}","/Users/rockerbox/capstones/c2-client/mindful/src/Stats/stats.js",["104","105","106","107","108","109"],"import React from 'react';\nimport getNumberofEntries from '../helper-funcs';\nimport journalContext from '../journal-context';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport './stats.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TokenService from '../Auth-Service/token-services';\nimport config from '../config';\n\n\n\n\nexport default class Stats extends React.Component {\n\n    static contextType = journalContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method: 'GET',\n            headers: {\n                'session_token':token\n            }\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/validate`, options)\n            .then(response => {\n                if(response.ok){\n\n                    return response.json()\n                }\n                throw new Error(response.statusText)\n            })\n            .then( responseJson => {\n                this.setState({\n                    message: responseJson.message\n                })\n                t\n            })\n            .catch( err => {\n                console.log(err.message);\n                this.props.history.push('/')\n            })\n\n    }\n\n\n    render(){\n\n    let posts = this.context.posts \n\n\n    let maxDateStat = () => {\n\n        let array = [];\n        \n        if(posts.length == 0){\n            return 'N/A';\n        }       \n        else {\n\n          posts.map( (posts , i) => {\n              let formattedDate = moment(this.context.posts[i].modified).format('MM/DD/YYYY')\n               array.push(formattedDate)\n               return;\n  \n            })\n            \n            let max = new Date(Math.max(...array.map(date => new Date(date))))\n            let formattedMax = moment(max).format('MM/DD/YYYY')\n            return formattedMax;\n    \n      \n            }\n        } \n\n    let statsToDisplay =  maxDateStat() \n\n        return(\n            <div className = 'stat-container'>\n                {this.context.posts ? <div className = \"stat one\">\n                <span className ='stat-title'>Last Moment</span> <span className ='stat-1'>{statsToDisplay}</span></div>: null }\n                {this.context.posts ? <div className = \"stat two\"><span className ='stat-title'>Moments</span><span className ='stat-2'> {posts.length}</span></div>: null }\n                <div className = \"stat-button\">\n                    <Link to = '/add-entry'>+</Link>\n                </div>\n            </div>\n             \n        )\n    }\n}",{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":72,"column":13,"nodeType":"116","endLine":72,"endColumn":79},{"ruleId":"117","severity":1,"message":"118","line":129,"column":34,"nodeType":"119","messageId":"120","endLine":129,"endColumn":36},{"ruleId":"110","severity":1,"message":"121","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":94,"column":69,"nodeType":"119","messageId":"120","endLine":94,"endColumn":71},{"ruleId":"110","severity":1,"message":"122","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":12},{"ruleId":"110","severity":1,"message":"121","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":60,"column":23,"nodeType":"119","messageId":"120","endLine":60,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":110,"column":1,"nodeType":"125","messageId":"126","endLine":110,"endColumn":88},{"ruleId":"117","severity":1,"message":"118","line":44,"column":37,"nodeType":"119","messageId":"120","endLine":44,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":74,"column":21,"nodeType":"116","endLine":74,"endColumn":124},{"ruleId":"114","severity":1,"message":"115","line":64,"column":17,"nodeType":"116","endLine":64,"endColumn":83},{"ruleId":"127","severity":1,"message":"128","line":2,"column":1,"nodeType":"129","endLine":5,"endColumn":2},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":40,"column":14,"nodeType":"136","messageId":"137","endLine":40,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":50,"column":81,"nodeType":"116","endLine":50,"endColumn":177},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"130","replacedBy":"140"},{"ruleId":"132","replacedBy":"141"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":48,"nodeType":"119","messageId":"120","endLine":5,"endColumn":50},{"ruleId":"110","severity":1,"message":"142","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"143","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":25},{"ruleId":"144","severity":2,"message":"145","line":39,"column":17,"nodeType":"146","messageId":"147","endLine":39,"endColumn":18},{"ruleId":"148","severity":2,"message":"149","line":39,"column":17,"nodeType":"112","messageId":"150","endLine":39,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":58,"column":25,"nodeType":"119","messageId":"120","endLine":58,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":66,"column":16,"nodeType":"136","messageId":"137","endLine":66,"endColumn":23},"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Edit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["151"],["152"],["151"],["152"],"'getNumberofEntries' is defined but never used.","'FontAwesomeIcon' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'t' is not defined.","undef","no-global-assign","no-unsafe-negation"]